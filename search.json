[{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"plotting-faq","dir":"Articles","previous_headings":"","what":"Plotting FAQ","title":"FAQ","text":"article contains answers common questions plots customizing ggplot output functions like plot_raw_current_data(). plot use throughout FAQ:","code":"cars_plot <- ggplot(cars, aes(x = speed, y = dist)) +   geom_point() +   labs(x = \"Speed (mph)\", y = \"Distance (ft)\") +   patchclampplotteR_theme()  cars_plot"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-save-my-plots-outside-of-r","dir":"Articles","previous_headings":"Plotting FAQ","what":"How do I save my plots outside of R?","title":"FAQ","text":"plots argument called save_png, can set “yes” “” (default “” cut run time). save_png set “yes”, save plot .png using ggsave() export folder. subfolder vary depending plot type. example, plots generated using plot_PPR_data_one_treatment() exported “Figures/Evoked-currents/PPR” relative project directory. want control export options, can also use ggsave() manually save ggplot object.","code":"ggsave(   cars_plot,   path = here(\"Figures/Raw-plots\"),   file = \"cars-plot.png\",   width = 7,   height = 5,   units = \"in\",   dpi = 300 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-change-the-plot-text-sizes","dir":"Articles","previous_headings":"Plotting FAQ","what":"How do I change the plot text sizes?","title":"FAQ","text":"quick fix making text bigger large_axis_text argument. Set large_axis_text “yes” add ggplot theme layer increases adjusts plot ideal posters presentations. want control font sizes, can also apply new theme() layer specify text elements manually. example:","code":"cars_plot +   theme(text = element_text(size = 25, color = \"darkmagenta\"))"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-change-the-plot-font-family","dir":"Articles","previous_headings":"Plotting FAQ","what":"How do I change the plot font family?","title":"FAQ","text":"can tricky vary depending operating system. recommend using extrafont package. need run code first time . Use fonts() see list fonts available R. Warning! font_import() take long time run, especially lot fonts computer. Luckily, need per system, install new font. extrafont package work, newer alternatives, showtext package, makes particularly easy add Google fonts system fonts. already fonts installed R, just need run library(extrafont) start document fonts available use. apply theme changes globally (.e. plots file), much efficient modify define theme. See !","code":"library(extrafont) font_import()  fonts() cars_plot +   theme(text = element_text(size = 25, color = \"darkmagenta\", family = \"Calibri\"))"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-modify-the-ggplot-theme","dir":"Articles","previous_headings":"Plotting FAQ","what":"How do I modify the ggplot theme?","title":"FAQ","text":"might wonder things like, “can override default theme came package?” “can make plots theme/fonts, etc.?”. can fix efficiently defining custom ggplot theme adding ggplot_theme argument plotting functions. Choose theme like theme_classic() patchclampplotteR_theme() came package. Use theme base, add new theme elements replace just components want change (see documentation theme modification ggplot2. new theme define inherit components base theme, replace just elements specified. Important! must assign theme name, since ggplot_theme argument requires named object. example, creatively call my_new_theme.  Now, insert theme ggplot_theme argument. one sample action potential plots default theme applied:  ’s plot looks like new theme:","code":"my_new_theme <- patchclampplotteR_theme() %+replace%   theme(     text = element_text(size = 25, color = \"#333333\"),     axis.title = element_text(face = \"plain\", size = 14),     panel.grid.major = element_line(color = \"#ebebeb\"),     axis.text = element_text(face = \"italic\", size = 8, color = \"#999999\"),     axis.line = element_blank()   ) cars_plot + my_new_theme plot_AP_comparison(   sample_AP_data,   plot_treatment = \"Control\",   plot_category = 2,   y_variable = \"peak_amplitude\",   y_axis_title = \"Peak Amplitude (pA)\",   theme_options = sample_theme_options,   baseline_label = \"Baseline\",   test_type = \"wilcox.test\",   post_hormone_label = \"Insulin\",   treatment_colour_theme = sample_treatment_names_and_colours,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() ) plot_AP_comparison(   sample_AP_data,   plot_treatment = \"Control\",   plot_category = 2,   y_variable = \"peak_amplitude\",   y_axis_title = \"Peak Amplitude (pA)\",   theme_options = sample_theme_options,   baseline_label = \"Baseline\",   test_type = \"wilcox.test\",   post_hormone_label = \"Insulin\",   treatment_colour_theme = sample_treatment_names_and_colours,   save_plot_png = \"no\",   ggplot_theme = my_new_theme )"},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-insert-my-own-colours-and-treatment-names","dir":"Articles","previous_headings":"Theme FAQ","what":"How do I insert my own colours and treatment names?","title":"FAQ","text":"define treatment names colours start, refer using treatment_colour_theme plotting functions. package comes pre-loaded sample_treatment_names_and_colours: First, check many treatment groups using unique(raw_eEPSC_df$treatment). Next, modify code set dataframe hormone names colours. Every time plot contains argument treatment_colour_theme, refer custom dataframe.","code":"unique(sample_raw_eEPSC_df$treatment) #> [1] Control       HNMPA         PPP           PPP_and_HNMPA #> Levels: Control HNMPA PPP PPP_and_HNMPA my_theme_colours <- data.frame(   treatment = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP_and_HNMPA\"),   display_names = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP\\n&\\nHNMPA\"),   colours = c(\"#f07e05\", \"#f50599\", \"#70008c\", \"#DCE319\"),   very_pale_colours = c(\"#fabb78\", \"#fa98d5\", \"#ce90de\", \"yellow\") ) plot_PPR_data_multiple_treatments(   data = sample_PPR_df,   include_all_treatments = \"yes\",   plot_category = 2,   baseline_label = \"B\",   post_hormone_label = \"I\",   test_type = \"t.test\",   theme_options = sample_theme_options,   treatment_colour_theme = my_theme_colours )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"how-do-i-modify-the-theme_options","dir":"Articles","previous_headings":"Theme FAQ","what":"How do I modify the theme_options?","title":"FAQ","text":"dataset contains theme options affect plots. include values line thickness point shapes male vs. female data points: want change values, please follow steps. Step 1: Create .csv file two columns (option value), modelled sample dataset. Important!: .csv must identical columns rows sample data, else plots won’t work! Step 2: Read .csv file using utils::read_csv(). now object R environment. Step 3: Important!! must convert first column (option) rownames. mandatory step allow theme_options indexed row name plotting functions. Step 4: Run following code: Step 5: Check resulting object. now 11 objects 1 variable, row names gray_shading_colour, line_col, etc. Step 6: Go plotting function like plot_raw_current_data() replace sample_theme_options newly created object Step 5. changed line_col orange, also changed male_shape female_shape. See, graph looks different now!","code":"library(tibble)  my_custom_theme_options <- read.csv(\"my_custom_theme_options.csv\") %>%   remove_rownames() %>%   column_to_rownames(var = \"option\") plot_summary_current_data(   data = sample_pruned_eEPSC_df$all_cells,   plot_category = 2,   plot_treatment = \"Control\",   current_type = \"eEPSC\",   y_variable = \"amplitude\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   include_representative_trace = \"no\",   y_axis_limit = 175,   signif_stars = \"yes\",   t_test_df = sample_eEPSC_t_test_df,   large_axis_text = \"no\",   shade_intervals = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = my_custom_theme_options ) #> Warning: Removed 25 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/FAQ.html","id":"what-does-this-package-replace","dir":"Articles","previous_headings":"Theme FAQ","what":"What does this package replace?","title":"FAQ","text":"package replaces manual plot creation data analysis GraphPad Prism /Excel. Previously, data analysis required transferring data programs, time-consuming potentially error-prone. package can combined report writing R generate fully reproducible manuscripts.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"set-up-data-sheet","dir":"Articles","previous_headings":"","what":"Set up data sheet","title":"Action Potential Analysis","text":"begin, set .csv file. suggest using consistent naming scheme includes date. use YYYYMMDD-title.csv format, 20250113-AP-analysis.csv. makes easy identify last analyzed data, files sort easily. .csv file, fill row 1 following column titles. Notice (except ID lowercase. letter unique letter identifier single cell. can use link data different recordings taken cell. state character value. example, values Baseline Insulin, indicating current clamp protocol taken cell exposed 500 nM insulin 25 minutes. time_of_threshold numerical value (ms) used determine properties like latency fire. t_x membrane potential moment action potential initiated, also known threshold. t11 derivative trace analyzing. Must 10 mV/ms greater properly identify threshold. ID character value indicating recording number. corresponds File Name column automatically generated Results sheet Clampfit. first_sweep_with_APs number representing earliest sweep number action potentials first appeared. trace_start automatic value calculated Clampfit, corresponds sweep number. used analyses, automatically included Results sheet Clampfit. ’s faster just copy data rather try exclude value. peak_amplitude membrane potential (mV) maximum depolarization. time_to_peak time peak amplitude (ms), also relative time_of_threshold repositioned Cursor 1 time_of_threshold. antipeak_amplitude afterhyperpolarization amplitude (mV) time_of_antipeak time -hyperpolarization (ms), relative time_of_threshold. half-width width action potential membrane potential half peak_amplitude.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"get-derivative","dir":"Articles","previous_headings":"","what":"Get derivative","title":"Action Potential Analysis","text":"Open .abf file containing current clamp step protocol Clampfit. Ensure x-axis shows time milliseconds. shows seconds, double-click x-axis, change Elapsed Time Automatic Milliseconds. Warning! y-axis values generally around -70 mV flat regions outside current injection. Sometimes scaling factor Clampfit distorted (unknown reasons) y-axis may thousands range. happens, follow step 1b). 1b. y-axis scale (see warning box ), double-click y-axis open Modify Signal Parameters box. Change V/pA ratio 0.01, click “OK”. re-scale y-axis correct units relative current injections. Double-check x-axis milliseconds! Sometimes V/pA ratio altered, may need change 0.01. Press “Enter” key show just one sweep time. begin sweep corresponding lowest current injection. Use greater symbol (>) cycle sweeps. Move sweeps corresponding higher current injections identify first sweep contains action potential. call t_x, since may t5 one recording, t6 another, etc. Position Cursors 1 2 around first action potential t_x. Cursor 1 threshold (aim area slope curve increases steeply). Cursor 2 -hyperpolarization region. ideal placement Cursor 1 middle curve. Left: Cursor 1 placed curve steep, likely miss threshold. Middle: Cursor 1 low, Clampfit may identify -hyperpolarization. Right: ideal spot, cursor early enough capture threshold search region. Warning! important Cursor 2 touches curve value lower voltage value Cursor 1. Cursor 1 lower, Clampfit may identify location Cursor 1 -hyperpolarization region forget move cursor threshold (see step 11).  Click arithmetic button (button basic math symbols), Add Traces. Write “1” click OK. add new empty trace, called t11. t11 derivative t_x. Expression box, write t11=diff(t6) (replace t6 value t_x).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"find-threshold","dir":"Articles","previous_headings":"","what":"Find threshold","title":"Action Potential Analysis","text":"Click Edit -> Transfer Traces set Region transfer Cursors 1..2. Trace Selection category, choose Vm_primary () signal. Select t_x t11 traces, click OK. Click Results sheet (Window -> Results1). Results page display three columns: Time (ms), Trace #6 (#5, #7, etc.), Trace #11. Trace #x membrane potential mV, Trace #11 derivative Trace #x. Warning! Results page transferred traces delete data files. several analyses one session, ensure looking correct columns corresponding active recording. Scroll Trace #11 column (derivative column) see series positive values increasing magnitude (e.g. > 100 ). derivative increasing. Select first value within series greater equal 10 mV/ms. Copy value three columns row. Note may isolated peaks within derivative greater 10 mV/ms. select value part series increasingly larger positive values, followed series negative values. scaling correct, threshold (t_x) around -30 mV healthy cell. .csv file now look like :","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"measure","dir":"Articles","previous_headings":"","what":"Measure action potential properties","title":"Action Potential Analysis","text":"Double-click Cursor 1 change x-position value (time) match time_of_threshold. Note Cursor 1 shifted right relative earlier cursor image. now located x-value membrane potential crosses threshold. Warning! reposition Cursor 1 time threshold, values time_of_peak time_of_antipeak incorrect! Click Statistics button (small icon summation symbol top ) press Alt+s. Set following settings: Trace Selection: Choose Vm_primary () t_x (case, t6) . include t11. Peak Polarity: Vm_primary, Positive-going Baseline Region: Fixed [paste threshold value (column t_x sheet) ] Search Region 1: Range: Cursors 1..2 Destination Option: Replace results sheet (prevents accidentally copying old data Column Order: Measurement, Region, Signal Measurements: peak_amplitude, time peak, antipeak amplitude, time antipeak, half-width Click OK Window -> Results1 see Results page.  Select data except File Path column (unless think need later) paste .csv file. ’ll notice .csv column names different column names Results sheet. changed column names make easier use R code. .csv file now look like . still file open, may want count action potentials (see section counting action potentials ). completed dataset look something like spreadsheet . Note action potentials later recording, insert values columns letter state leave others blank. now ready import data R! Use add_new_cells() function data_type = \"AP_parameter\". may find helpful read Get Started guide setting data first time. Use plot_AP_comparison() function see parameters like peak_amplitude half-width change treatment.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"count","dir":"Articles","previous_headings":"","what":"Count action potentials","title":"Action Potential Analysis","text":"next step count number action potentials sweep. allow later make plot action potential frequency vs. current injection see treatment affect action potential frequency. Create separate .csv file (example 20250113-AP-count-data.csv). file four columns: letter unique letter identifier single cell. state character value (“Baseline” “Insulin” example) sweep number 1 10 (see step 18a generate ) no_of_APs numerical value indicating number action potentials 18a. generate repeated sequence 1-10 quickly, type number 1 cell C2. , type number 2 cell C3. 18b. Select C2 C3 together, hover mouse bottom right corner group see small black plus symbol.  18c. Click hold mouse key drag selection C11 generate sequence 1 10. 18d. entire range C2 C11 selected. Move mouse bottom right corner cell see + symbol . Hold Ctrl key drag selection . generate sequence 1-10 repeatedly (e.g. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3…) 18e. can copy paste range repeatedly fill column. Open current clamp steps recording Clampfit (may coming directly step 16 measured action potential properties). Press Enter key view one sweep time, use < > cycle sweeps. Count number action potentials sweep, record no_of_APs column. Yes, step may seem super simple, ’s - look sweep count number action potentials present! example one recording look like:","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/action-potential-analysis.html","id":"faq","dir":"Articles","previous_headings":"","what":"FAQ","title":"Action Potential Analysis","text":"action potentials following treatment? discard cell; important meaningful data! Fill letter state, leave columns blank. R fill NA values, since action potential properties measure. However, AP count data, please just indicate 0 current injections. action potentials outside time current injection applied?  can happen excitable cells. count action potentials occurred within injection period. count action potential looks wavy?  include action potential clearly crosses threshold, comes sharp peak, -hyperpolarization period. References Farries, M. ., Kita, H., & Wilson, C. J. (2010). Dynamic Spike Threshold Zero Membrane Slope Conductance Shape Response Subthalamic Neurons Cortical Input. Journal Neuroscience, 30(39), 13180–13191. https://doi.org/10.1523/JNEUROSCI.1909-10.2010","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"combine-recordings","dir":"Articles","previous_headings":"","what":"Combine recordings","title":"Evoked Current Analysis","text":"Note data lab continuous 30-minute recording. pause recording every 5 minutes obtain parameters like access resistance capacitance membrane test resuming recording. data already continuous file, can skip steps 1-2. Open first .abf file recording series, use Next File button quickly open files series. Click Analyze -> Concatenate Files select files belong recording single cell. recordings combined continuous recording gaps.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"create-data-sheet","dir":"Articles","previous_headings":"","what":"Create data sheet","title":"Evoked Current Analysis","text":"Create .csv file four columns: Letter, ID, P1, P2. Letter unique letter identifier single cell. ID character value indicating recording number. corresponds File Name column automatically generated Results sheet Clampfit. See warning put . P1 amplitude first evoked current. P2 amplitude second evoked current. Note strongly recommend using filename first file series (write concatenated filename lab book well). Clampfit auto-generate concatenated file names (Concatenate001.abf, Concatenate002.abf, etc.). update pClamp software, Clampfit begin naming files Concatenate000.abf, lose track file .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"view-recording","dir":"Articles","previous_headings":"","what":"View recording","title":"Evoked Current Analysis","text":"Click Show Aquistion Signals button Previous Signal (blue arrow figure ) view sweeps showing changes current (Im_primary ()). traces stacked top , , click View -> Data Display -> Sweeps. can also click Auto Scale Y Axes button (orange arrow) help see data faster.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"set-up-cursors","dir":"Articles","previous_headings":"","what":"Set up cursors","title":"Evoked Current Analysis","text":"need set per computer. Double-click anywhere blank region graph open Analysis Window Properties box. Cursor Options, increase number cursor pairs 3. 3 pairs used set baseline, first evoked current, second evoked current. Position Cursors 1 2 first stimulus artifact. Cursors 3 4 surround first evoked current, Cursors 5 6 surround second evoked current.  Warning! Ensure cursors fully enclose evoked currents include stimulus artifacts. Click View -> Window Defaults Save selected Analysis Windows settings default. save time running many analyses since restore cursor pairs position new files!","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"get-current-amplitudes","dir":"Articles","previous_headings":"","what":"Get current amplitudes","title":"Evoked Current Analysis","text":"Click Statistics button (small icon summation symbol top ) press Alt+s. Set following settings: Trace Selection: Choose Im_primary () Select traces. want exclude specific traces, click traces, select Invert choose traces except ones excluded. Peak Polarity: Im_primary, Negative-going Baseline Region: Mean level Cursors 1..2 Search Region 1: Range: Cursors 3..4 Search Region 2 (click arrow next number click checkbox enable second search region): Range: Cursors 5..6 Destination Option: Replace results sheet (prevents accidentally copying old data) Column Order: Measurement, Region, Signal Measurements: Peak_amplitude Warning! Ensure selected traces want include recording! can verify correct number checking total number sweeps bottom-right corner. example, 360 sweeps want include sweeps, trace selection show t1..360. Warning! Check settings correct, especially done analyses Clampfit recently. example, polarity may set Positive-going, may incorrect search regions specified recently analyzing action potential data. Warning! Measurements options change search region, make sure search regions Peak_amplitude checked!  Click OK view Results sheet (Window -> Results1). Copy R1S1 R2S1 columns, correspond first second evoked currents, respectively. Paste values P1 P2 columns. Fill Letter ID columns. Excel, can just fill first values, double-click cell bottom right corner automatically fill entire column. final dataset look something like following table. finished analysis Clampfit!","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"cell-characteristics","dir":"Articles","previous_headings":"","what":"Cell Characteristics","title":"Evoked Current Analysis","text":"Create new .csv file. eventually become large spreadsheet information recordings entire dataset. add new recordings, update cell characteristics sheet. Please see Required columns section documentation import_cell_characteristics_df() explanations required columns include. completed steps several recordings, two .csv files: .csv file evoked current amplitudes (P1 P2) .csv file containing information cell characteristics two files, ready begin using patchclampplotteR! See Getting Started vignette learn combine data use patchclampplotteR.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/evoked-current-analysis.html","id":"faq","dir":"Articles","previous_headings":"","what":"FAQ","title":"Evoked Current Analysis","text":"noisy traces traces strange artifacts. can exclude individual traces (example ones lots noise unstable baseline) Trace Selection box Step 11. Select traces want exclude, Invert selection.  mean two currents close together?  see two peaks instead one expected evoked current, example multivesicular release. Make note , since treatment lead changes synaptic activity interesting mechanism. new recordings. add existing .csv files, make new files? save new .csv file new batch raw data (.csv files Letter, ID, P1 P2). may find efficient wait week recordings, analyze recordings Clampfit. data .csv file named something like 20240708-eEPSC-data.csv. However, writing paper thesis, use just one master csv file contains evoked current data recordings entire project. append new data master csv, use add_new_cells() function. Please see vignette(\"patchclampplotteR\") details. seeing twice many data columns expected (e.g. R1S1, R1S2, R2S1 R2S2) R stands Region S stands Signal. see one S (example, R1S1 R1S2) indicates selected signals (Im_primary Vm_primary). Statistics dialog box (Alt + s) click Trace Selection ensure one signal selected. Sometimes accidentally switched visible signals incorrect. see multiple R columns, may indicate extra search regions enabled. want one search region, double-check Search Region 2 isn’t accidentally checked. Click arrow next number box ensure box next Search Region 2 unchecked. want analyze evoked currents time, seeing one data column (R1S1). opposite issue . time, enough Search Regions enabled. Statistics dialog box (Alt + s) click arrow next number box ensure Search Region 2 enabled.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"how-to-use-patchclampplotter","dir":"Articles","previous_headings":"","what":"How to use patchclampplotteR","title":"patchclampplotteR","text":"patchclampplotteR help analyze plot patch clamp data efficiently. vignette walk complete process transforming raw data publication-quality plots!","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"set-up-r-project","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Set up R Project","title":"patchclampplotteR","text":"use package, set new folder computer. Give folder short, distinctive name spaces (use hyphens instead). strongly recommend adding subfolders names like Data, Figures, Thesis. help organization make easier expand future projects, like writing thesis R. RStudio, click File -> New project -> Existing Directory choose folder just created. Click Create Project R refresh blank, new project. ’re now ready create new R Markdown (.Rmd) file start analysis!","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"install-and-load-package","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Install and load package","title":"patchclampplotteR","text":"can install development version patchclampplotteR GitHub. per computer, ’s major update. load package time want use :","code":"pak::pak(\"christelinda-laureijs/patchclampplotteR\") library(patchclampplotteR)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"about-the-data","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"About the data","title":"patchclampplotteR","text":"sample dataset consists whole-cell patch clamp recordings neurons within dorsomedial hypothalamus (DMH), brain region critical appetite regulation, stress responses processes. recorded evoked excitatory post-synaptic currents five minutes baseline conditions, added 500 nM insulin perfusion solution, continued recording 25 minutes. goal determine insulin affects evoked current amplitude DMH neurons.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"analyze-data-in-clampfit","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Analyze data in Clampfit","title":"patchclampplotteR","text":"Please see vignettes Articles page learn analyze data Clampfit. include Evoked Current Analysis Action Potential Analysis.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"cell-characteristics","dir":"Articles","previous_headings":"How to use patchclampplotteR > Import raw .csv files","what":"Cell Characteristics","title":"patchclampplotteR","text":"First, must import .csv file containing information factors animal’s age sex, cell ID number, details. Please see Required columns section documentation import_cell_characteristics_df() full explanations required columns include. Note: Since vignette included within R package, following code requires function import_ext_data() properly locate .csv file package folder. won’t required using package within project folder. include import_ext_data() code, won’t work. can just write path filename directly within import_cell_characteristics_df(). example, write import_cell_characteristics_df(\"Data/cell_info.csv\") use cell_info.csv located within Data/ folder.","code":"cell_characteristics <- import_cell_characteristics_df(import_ext_data(\"sample_cell_characteristics.csv\"))  reactable(cell_characteristics)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"raw-evoked-current-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Import raw .csv files","what":"Raw evoked current data","title":"patchclampplotteR","text":"Next, import raw evoked current data copied Clampfit (, please see Evoked Current Analysis vignette details analyze data Clampfit. .csv file containing four columns: letter, ID, P1 P2: letter: unique identifier single recording, allows link evoked current data, spontaneous current data, action potential, data, information cell characteristics. ID: name .abf filename used obtain data, useful verifying recordings cross-referencing lab book. P1: amplitude first evoked current (pA). P2: amplitude second evoked current (pA). Try match capitalization column names examples listed . forget make lowercase, don’t worry. add_new_cells() automatically convert column names lowercase consistency across functions. Capitalized letters retained columns like ID, X, Y, P1, P2.","code":"sample_eEPSC_data <- read.csv(import_ext_data(\"sample_new_eEPSC_data.csv\"))  reactable(sample_eEPSC_data)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"add-new-cells","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Add new cells","title":"patchclampplotteR","text":"next step merge raw evoked current data cell characteristics data. add_new_cells() merge two datasets, using letter common column. function requires three .csv files: new raw data cell characteristics existing .csv raw data previously imported. project goes , eventually appending new data onto existing datasheet, starting completely fresh, use blank .csv file containing just required column names. WARNING!! starting blank .csv file containing column names, MUST type character value letter column (typically, cell A2 using Excel). R recognize letter column character value. Use character won’t confused true letter value dataset (e.g. “blank”). Use add_new_cells() function, carefully read warning messages.","code":"blank_csv <- read.csv(import_ext_data(\"empty_eEPSC_sheet.csv\")) first_time_df <- add_new_cells(   new_raw_data_csv = import_ext_data(\"sample_new_eEPSC_data.csv\"),   cell_characteristics_csv = import_ext_data(\"sample_cell_characteristics.csv\"),   old_raw_data_csv = import_ext_data(\"empty_eEPSC_sheet.csv\"),   data_type = \"eEPSC\",   write_new_csv = \"no\",   new_file_name = \"\",   decimal_places = 2 ) #> Warning in add_new_cells(new_raw_data_csv = #> import_ext_data(\"sample_new_eEPSC_data.csv\"), : Renamed dataframe columns to #> lowercase #>  #>  #> Letter check passed: All letters are present in both \"/home/runner/work/_temp/Library/patchclampplotteR/extdata/sample_cell_characteristics.csv\"  #> and \"/home/runner/work/_temp/Library/patchclampplotteR/extdata/sample_new_eEPSC_data.csv\". #>   #> The matching cells are: #> AV #>  #>   #> Duplication check passed: All letters in \"/home/runner/work/_temp/Library/patchclampplotteR/extdata/sample_new_eEPSC_data.csv\" are new relative to \"/home/runner/work/_temp/Library/patchclampplotteR/extdata/empty_eEPSC_sheet.csv\" #>   #> Adding the new following new cells: #> AV"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"check-output-messages","dir":"Articles","previous_headings":"How to use patchclampplotteR > Add new cells","what":"Check output messages","title":"patchclampplotteR","text":"add_new_cells() produces several warnings messages. One warning lets know know column names renamed lowercase. avoid case-sensitive issues appearing later functions. first message generated add_new_cells() indicate sample_cell_characteristics.csv sample_new_eEPSC_data.csv cells. useful catch forget add cell characteristics new data. second message indicates letters new data new relative existing dataset. ensures don’t accidentally paste data twice, resulting duplicated data. final message prints list letters added dataset. case, AV. good way confirm ’ve added letters planning add. can also ask R produce list unique letters dataset. won’t catch duplicates, can help identify letter completely missing dataset. See, AV now included! However, can also see placeholder “blank” still present. Use following code remove blank first line. NOTE: start new project, adding data blank .csv file. datasheet established, won’t need . Write resulting, cleaned dataframe .csv file Data/ folder. example full rows look like now: collect data, change value old_raw_data_csv empty sheet existing raw data sheet. function automatically append new data onto existing sheet save new .csv file (defined new_file_name). saving Data/ subfolder.","code":"unique(first_time_df$letter) #> [1] \"blank\" \"AV\" # Remove first \"blank\" row first_time_df <- tail(first_time_df, -1)  # Re-number rows starting from 1 rownames(first_time_df) <- 1:nrow(first_time_df)  # Double-check that only true letters are present unique(first_time_df$letter) #> [1] \"AV\" utils::write.csv(first_time_df,   here::here(\"Data/Insert-filename-here.csv\"),   row.names = F ) raw_eEPSC_data <- add_new_cells(   new_raw_data_csv = import_ext_data(\"sample_new_eEPSC_data.csv\"),   cell_characteristics_csv = import_ext_data(\"sample_cell_characteristics.csv\"),   old_raw_data_csv = import_ext_data(\"empty_raw_eEPSC_datasheet.csv\"),   current_type = \"eEPSC\",   write_new_csv = \"no\",   new_file_name = \"Data/20241118-Raw-eEPSC-Data.csv\",   decimal_places = 2 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"explore-your-data","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Explore your data","title":"patchclampplotteR","text":"Let’s look example full dataset. sample raw evoked current dataset included package. reduce vignette size, printing just first 20 rows. full dataset contains > 5680 rows!) can use dplyr functions quickly explore data. ’s just one example quick useful analysis:","code":"raw_eEPSC_df <- sample_raw_eEPSC_df  head(raw_eEPSC_df, n = 20) %>%   reactable()"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"count-number-of-cells-per-sex-and-treatment","dir":"Articles","previous_headings":"How to use patchclampplotteR > Explore your data","what":"Count number of cells per sex and treatment","title":"patchclampplotteR","text":"Quick Tip: Want know many experiments still need ? Run line code raw data. , filtered data category 2 (experiments added insulin) grouped treatment. counted number cells per sex.","code":"raw_eEPSC_df %>%   filter(category == 2) %>%   filter(time == 0) %>%   group_by(treatment) %>%   count(sex) %>%   arrange(treatment, sex) #> # A tibble: 8 × 3 #> # Groups:   treatment [4] #>   treatment     sex        n #>   <fct>         <fct>  <int> #> 1 Control       Female     1 #> 2 Control       Male       3 #> 3 HNMPA         Female     2 #> 4 HNMPA         Male       3 #> 5 PPP           Female     3 #> 6 PPP           Male       2 #> 7 PPP_and_HNMPA Female     1 #> 8 PPP_and_HNMPA Male       4"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"define-your-colour-theme","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Define your colour theme","title":"patchclampplotteR","text":"package, need specify treatment groups colours . can later refer dataframe treatment_colour_theme arguments plotting functions. package loaded sample dataframe help get started: colours very_pale_colours specified hex codes named R colours. difference treatment display_names display_names re-written look attractive plots tables. First, check many treatment groups using unique(raw_eEPSC_df$treatment). Next, modify code set dataframe treatment names colours. Every time plot contains argument treatment_colour_theme, refer custom dataframe. see example, see Theme FAQ","code":"unique(raw_eEPSC_df$treatment) #> [1] Control       HNMPA         PPP           PPP_and_HNMPA #> Levels: Control HNMPA PPP PPP_and_HNMPA my_theme_colours <- data.frame(   treatment = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP_and_HNMPA\"),   display_names = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP\\n&\\nHNMPA\"),   colours = c(\"#f07e05\", \"#f50599\", \"#70008c\", \"#DCE319\"),   very_pale_colours = c(\"#fabb78\", \"#fa98d5\", \"#ce90de\", \"yellow\") )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"analyze-current-amplitude","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Analyze current amplitude","title":"patchclampplotteR","text":"finished brief exploration data, time analyze !","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"step-1-normalize-currents","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze current amplitude","what":"Step 1: Normalize currents","title":"patchclampplotteR","text":"first step normalize current amplitudes within recording relative average current amplitude baseline period. makes easier compare across cells wide range starting amplitudes, since baseline values converted (roughly) 100%. Note set minimum maximum time values. limit data values 0 min 25 minutes. set interval_length 5 wanted divide data 5-minute intervals later statistical analyses. baseline period (baseline_length) lasted 5 minutes. Clampfit recorded current amplitude negative values, set negative_transform_currents “yes” flip current amplitudes positive values. make_normalized_EPSC_data() retain cell characteristics P1 P2 values . However, notice changes. set negative_transform “yes”, P1 P2 multiplied -1. “flip” current amplitude data recorded negative values Clampfit. Since data evoked current data (current_type = \"eEPSC\"), new columns added. : PPR: paired-pulse ratio, amplitude second evoked current divided first evoked current (PPR = P2/P1). interval: interval data belongs . set interval_length 5, means data divided 5-minute intervals. intervals names like “t0to5”, “t5to10”, maximum interval. baseline_range: probably won’t interact much, just column stating “TRUE” time within baseline period, “FALSE” time outside range. required normalization function identify values outside baseline (transformed). baseline_mean: one number represents average evoked current amplitude baseline period. value different recording. P1_transformed: first evoked current amplitude, normalized relative mean baseline amplitude. example, mean baseline amplitude 80 pA P1 value 40 pA, P1_transformed 50%. P2_transformed: second evoked current amplitude, normalized relative mean baseline amplitude first evoked current.","code":"raw_eEPSC_df <- make_normalized_EPSC_data(   filename = import_ext_data(\"sample_eEPSC_data.csv\"),   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   interval_length = 5,   baseline_length = 5,   negative_transform_currents = \"yes\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"plot-raw-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze current amplitude > Step 1: Normalize currents","what":"Plot raw data","title":"patchclampplotteR","text":"Let’s see raw values look like time! plot_raw_current_data() generate scatterplot evoked current amplitude (pA) time (min) cells within treatment category specify. Behind scenes, really runs loop letter, generating ggplot object recording. Please see documentation plot_raw_current_data() learn arguments detail. plot_raw_current_data() return list ggplot objects. want observe just one specific plot, can select letter.","code":"raw_eEPSC_control_plots <- plot_raw_current_data(   data = raw_eEPSC_df,   plot_treatment = \"Control\",   plot_category = 2,   current_type = \"eEPSC\",   y_variable = \"P1\",   pruned = \"no\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours ) raw_eEPSC_control_plots$L"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"step-2-prune-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze current amplitude","what":"Step 2: Prune data","title":"patchclampplotteR","text":"often useful summarize data per minute. familiar GraphPad Prism’s “prune rows” function, make_pruned_EPSC_data() perform function. vignette, ’ll use example pruning data per minute typically used Crosby lab. can change value changing interval_length something 1. function return list three dataframes. access list, type object name, followed dollar sign. example, write pruned_eEPSC_df$individual_cells access first dataframe list. three dataframes : $individual_cells: dataframe structure raw evoked current data, except data pruned per minute. New columns include mean_P1 sd_P1, columns variance analysis (please see documentation make_pruned_EPSC_data() details). $for_table: dataframe two columns: letter P1_transformed pruned P1 values collapsed list. used create sparkline make_interactive_summary_table(). $all_cells: dataframe contains data grouped treatment sex. dataframe, data summarized collapsed one datapoint per minute cells per minute specific sex. useful creating summary plots publication (e.g. plot_summary_current_data()) future statistical testing compare groups.","code":"pruned_eEPSC_df <- make_pruned_EPSC_data(   data = raw_eEPSC_df,   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   baseline_length = 5,   interval_length = 1 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"plot-pruned-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze current amplitude > Step 2: Prune data","what":"Plot pruned data","title":"patchclampplotteR","text":"can use plot_raw_current_data() plot pruned data. need make changes following arguments: data: Refer third element list produced make_pruned_EPSC_data(). $individual_cells. y_variable: Change “mean_P1”. pruned: Change “yes” See raw data plot, except pruned per minute? pruned data cells within specific treatment sex ($all_cells) enable make summary plot using plot_summary_current_data(). Notice data now sample_pruned_eEPSC_df$all_cells, y_variable “amplitude”. lots customization opportunities plotting summary data, including adding representative trace .png overlay! can read documentation plot_summary_current_data().","code":"pruned_eEPSC_control_plots <- plot_raw_current_data(   data = sample_pruned_eEPSC_df$individual_cells,   plot_treatment = \"Control\",   plot_category = 2,   current_type = \"eEPSC\",   y_variable = \"mean_P1\",   pruned = \"yes\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours ) pruned_eEPSC_control_plots$L plot_summary_current_data(   plot_category = 2,   plot_treatment = \"Control\",   data = sample_pruned_eEPSC_df$all_cells,   current_type = \"eEPSC\",   y_variable = \"amplitude\",   include_representative_trace = \"yes\",   representative_trace_filename = \"test.png\",   y_axis_limit = 175,   signif_stars = \"yes\",   t_test_df = sample_eEPSC_t_test_df,   hormone_added = \"Insulin\",   large_axis_text = \"no\",   shade_intervals = \"no\",   hormone_or_HFS_start_time = 5,   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options ) #> Warning in plot_summary_current_data(plot_category = 2, plot_treatment = \"Control\", : The file test.png does not exist. #>          #> Are you sure that you specified the correct filename? #>          #> Did you forget to add .png to the end of your filename? #>          #> Did you forget to include the subfolder (if required) in the filename? (e.g. \"Data/file.png\" for something in the Data/ folder) #>          #>  #>         Plotting without a representative trace. #> Warning: Removed 25 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"step-3-summarize-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze current amplitude","what":"Step 3: Summarize data","title":"patchclampplotteR","text":"next step group data treatment sex obtain summary data. dataset groups data intervals generates summary statistics (like mean standard error) point. interval length already specified make_normalized_EPSC_data() function earlier.","code":"summary_eEPSC_df <- make_summary_EPSC_data(   data = sample_raw_eEPSC_df,   current_type = \"eEPSC\",   save_output_as_RDS = \"no\" )  head(summary_eEPSC_df, n = 30) %>%   reactable()"},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"create-ppr-dataset","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze the paired-pulse ratio","what":"Create PPR dataset","title":"patchclampplotteR","text":"function make_PPR_data() actually just filtering function limit raw evoked current data two specific intervals. represent “” (baseline_interval) “” (post_hormone_interval) states. can also choose limit PPR values certain range exclude outliers.","code":"PPR_df <- make_PPR_data(   data = raw_eEPSC_df,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   PPR_min = 0,   PPR_max = 5,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme = sample_treatment_names_and_colours )  head(PPR_df, n = 10) %>%   reactable()"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"plot-ppr-data","dir":"Articles","previous_headings":"How to use patchclampplotteR > Analyze the paired-pulse ratio","what":"Plot PPR data","title":"patchclampplotteR","text":"specific treatment:  multiple treatments:","code":"plot_PPR_data_one_treatment(   data = PPR_df,   plot_treatment = \"Control\",   plot_category = 2,   baseline_label = \"Baseline\",   post_hormone_label = \"Insulin\",   test_type = \"t.test\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options,   save_plot_png = \"no\" ) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_segment()`). plot_PPR_data_multiple_treatments(   data = PPR_df,   include_all_treatments = \"yes\",   plot_category = 2,   baseline_label = \"B\",   post_hormone_label = \"I\",   test_type = \"t.test\",   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"variance-analysis","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Variance analysis","title":"patchclampplotteR","text":"can use variance measures like coefficient variation variance--mean ratio (VMR) help determine mechanism presynaptic post-synaptic (see van Huijstee & Kessels, 2020 details). package contains functions make_variance_data() plot_variance_comparison_data() allow perform variance analysis quickly summary evoked current data (e.g. data generated make_summary_EPSC_data()).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"create-variance-dataset","dir":"Articles","previous_headings":"How to use patchclampplotteR > Variance analysis","what":"Create variance dataset","title":"patchclampplotteR","text":"","code":"variance_df <- make_variance_data(   data = summary_eEPSC_df,   df_category = 2,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme = sample_treatment_names_and_colours,   save_output_as_RDS = \"no\" )  reactable(variance_df)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"plot-variance-comparisons","dir":"Articles","previous_headings":"How to use patchclampplotteR > Variance analysis","what":"Plot variance comparisons","title":"patchclampplotteR","text":"can create plots comparing inverse coefficient variation squared, variance--mean ratio.","code":"cv_comparison_control_plot <- plot_variance_comparison_data(   data = variance_df,   plot_category = 2,   plot_treatment = \"Control\",   variance_measure = \"cv\",   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   post_hormone_label = \"Insulin\",   test_type = \"wilcox.test\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options )  vmr_comparison_control_plot <- plot_variance_comparison_data(   data = variance_df,   plot_category = 2,   plot_treatment = \"Control\",   variance_measure = \"VMR\",   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   post_hormone_label = \"Insulin\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options )  cv_comparison_control_plot vmr_comparison_control_plot"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/patchclampplotteR.html","id":"compare-baseline-parameters","dir":"Articles","previous_headings":"How to use patchclampplotteR","what":"Compare baseline parameters","title":"patchclampplotteR","text":"","code":"plot_baseline_data(   data = summary_eEPSC_df,   current_type = \"eEPSC\",   y_variable = \"raw_amplitude\",   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   large_axis_text = \"no\",   plot_width = 8,   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options,   save_plot_png = \"no\" ) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"combine-recordings","dir":"Articles","previous_headings":"","what":"Combine recordings","title":"Spontaneous Current Analysis","text":"Note data lab continuous 30-minute recording. pause recording every 5 minutes obtain parameters like access resistance capacitance membrane test resuming recording. data already continuous file, can skip steps 1-2. may already concatenated file Evoked current analysis. also means can skip steps 1-2. Open first .abf file recording series, use Next File button quickly open files series. Click Analyze -> Concatenate Files select files belong recording single cell. recordings combined continuous recording gaps.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"view-recording","dir":"Articles","previous_headings":"","what":"View recording","title":"Spontaneous Current Analysis","text":"Click Show Aquistion Signals button Previous Signal (blue arrow figure ) view sweeps showing changes current (Im_primary ()). traces stacked top , , click View -> Data Display -> Sweeps. can also click Auto Scale Y Axes button (orange arrow) help see data faster.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"create-data-sheet","dir":"Articles","previous_headings":"","what":"Create data sheet","title":"Spontaneous Current Analysis","text":"Create .csv file six columns: Letter, ID, Trace, Peak_amplitude Time_of_peak. Letter unique letter identifier single cell. ID character value indicating recording number. corresponds File Name column automatically generated Results sheet Clampfit. See warning put . Trace Peak_amplitude Time_of_peak Note strongly recommend using filename first file series (write concatenated filename lab book well). Clampfit auto-generate concatenated file names (Concatenate001.abf, Concatenate002.abf, etc.). update pClamp software, Clampfit begin naming files Concatenate000.abf, lose track file .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"identify-threshold","dir":"Articles","previous_headings":"","what":"Identify threshold","title":"Spontaneous Current Analysis","text":"reduce risk identifying noise spontaneous currents, must set detection threshold. Zoom region recording spontaneous currents minimal noise. Place Cursors 1 2 around region. Cursors 1 2 surrounding good baseline region. may need view smaller number traces many find clear region. Use View -> Select sweeps select smaller range. Click Statistics button (small icon summation symbol top ) press Alt+s. Set following settings measure noise amplitude baseline: Trace Selection: Choose Im_primary () Visible Traces. Peak Polarity: Im_primary, Negative-going Baseline Region: Mean level Cursors 1..2 Search Region 1: Range: Cursors 1..2 Destination Option: Replace results sheet (prevents accidentally copying old data) Column Order: Measurement, Region, Signal Measurements: Peak_amplitude Click Results sheet (Window -> Results1). results page, copy values R1S1 Peak column. Paste column blank Excel sheet. cell B1, type formula =AVERAGE(:). produce mean noise amplitude. cell B2, type formula =STDEV.S(:) get standard deviation. cell B3 type =B2*5. value five times standard deviation mean noise amplitude, threshold value recording (write lab book near notes recording). may want save Excel sheet later use (just replace data column time).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"set-event-detection-parameters","dir":"Articles","previous_headings":"","what":"Set Event Detection parameters","title":"Spontaneous Current Analysis","text":"Click Event Detection -> Threshold search. recording look faded, new horizontal cursors appear. Set Event Polarity Negative-going. Threshold Search box, set Baseline 0 Trigger (pA) threshold value found step 12. large artifacts, enable Reject cursor drag level artifacts. event amplitude larger reject zone excluded. Note need remove entire trace, click press Delete key. hide trace Later, select visible traces analysis. issues noise detection, feel free experiment settings pre- post-trigger lengths noise rejection. Set search region Full Trace. Click Select button ensure option Visible Traces selected. can double-check selected correct number sweeps (t1..360) checking total sweep number bottom right corner (Sweep 360 360). Click OK close dialog box. ever need , click Search Parameters button bottom left side toolbar.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"identify-currents","dir":"Articles","previous_headings":"","what":"Identify currents","title":"Spontaneous Current Analysis","text":"Click Full Scale X Axis button view entire trace. > Warning! check “Full Scale X axis”, Clampfit continuously scroll recording take much longer run. Event viewer window pop , , click Event Viewer button. lower-right side, click Options button, following: Uncheck Open Event Viewer automatically starting event detection Uncheck Continuous autoscale Close Event Viewer window  Warning! close Event Viewer (perform items Step 21), Clampfit try refresh resize window time current detected. likely freeze crash software. Click Nonstop button initiate Event Detection. Clampfit draw blue dot event. may take minutes large files.  Event Detection stopped, nonstop button become greyed small notification sound. recording look like events detected. screenshot, events highlighted blue sketch event placed . many spontaneous currents, sketches turned solid blue bar!","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"exclude-evoked-currents","dir":"Articles","previous_headings":"","what":"Exclude evoked currents","title":"Spontaneous Current Analysis","text":"Since analysis focuses spontaneous currents , need exclude stimulus artifacts evoked currents included event detection. Clampfit easy way select multiple currents . However, one work-around create plot current amplitude time select points delete.  Click Define Graphs button choose Scatterplot option.  Set x-axis Time Peak y-axis Peak amplitude. see plot shows blue dots arranged rough shape resembles blue dots recording file Step 22. Note, analysed file fewer sweeps reduce run-time strain computer making tutorial. Note: newer version Clampfit (pClamp 11) appears applying rounding function graph, creates parallel lines dots. reality, spontaneous currents perfectly aligned like . Click hold cursor button highlight dots corresponding evoked currents stim artifacts. screenshot, notice stimulus artifacts grouped together one place. selected points mouse. Go back recording file check selected values correspond stim artifacts evoked currents. may need repeat steps 26 27 times make sure selected non-spontaneous current events. Click Process Selection button looks like yellow triangle overlapping blue triangle. 29. dialog box pop . Process selection, click Change state Reject. confident removed stim artifacts evoked currents, time save results sheet. Click Results sheet (Window -> Results1) Save . suggest creating consistent naming convention, Letter-events, AA-events.sta, AB-events.sta, etc.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"copy-required-columns","dir":"Articles","previous_headings":"","what":"Copy required columns","title":"Spontaneous Current Analysis","text":"Create .csv file five columns: letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. ID character value recording filename. recording_num numeric value representing recording number. incorporated switched concatenating recordings one, needs remain prevent breaking previous projects. set 1. trace numeric value representing trace (automatically generated Clampfit) current occurred. amplitude numeric value representing amplitude evoked current pA. time_of_peak numeric value representing time peak milliseconds relative trace number. automatically calculated Clampfit. Paste values results sheet. Repeat number recordings need analyze. now ready import data R! Use add_new_cells() function data_type = \"sEPSC\". may find helpful read Get Started guide setting data first time.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/articles/spontaneous-current-analysis.html","id":"faq","dir":"Articles","previous_headings":"","what":"FAQ","title":"Spontaneous Current Analysis","text":"noisy traces traces strange artifacts. can exclude individual traces (example ones lots noise unstable baseline) Trace Selection box Step 11. Select traces want exclude, Invert selection. difficult accurately identify true currents sweep.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christelinda Laureijs. Author, maintainer.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Laureijs C (2025). patchclampplotteR: Plot Analyze Raw Patch Clamp Electrophysiology Data. R package version 0.1.0, https://christelinda-laureijs.github.io/patchclampplotteR/, https://github.com/christelinda-laureijs/patchclampplotteR.","code":"@Manual{,   title = {patchclampplotteR: Plot and Analyze Raw Patch Clamp Electrophysiology Data},   author = {Christelinda Laureijs},   year = {2025},   note = {R package version 0.1.0, https://christelinda-laureijs.github.io/patchclampplotteR/},   url = {https://github.com/christelinda-laureijs/patchclampplotteR}, }"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/index.html","id":"patchclampplotter-","dir":"","previous_headings":"","what":"Plot and analyze patch clamp electrophysiology data in R","title":"Plot and analyze patch clamp electrophysiology data in R","text":"patchclampplotteR provides set user-friendly tools electrophysiologists want plot analyze data whole-cell patch clamp electrophysiology recordings. ’s functions package can (see examples!):  Plot raw evoked spontaneous current amplitudes time recordings . Normalize current amplitudes relative mean baseline values. Plot normalized current amplitudes time recordings. Plot summary data specific treatment, grouped sex. Plot representative spontaneous current traces .abf file scale bar. Compare spontaneous current amplitude frequency Compare variance parameters help determine presynaptic mechanisms. !","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Plot and analyze patch clamp electrophysiology data in R","text":"Plot raw evoked currents specific cell:  Plot evoked current amplitudes summarized sex:  Plot representative recording trace showing spontaneous currents raw Axon Binary File (.ABF):","code":"raw_eEPSC_control_plots <- plot_raw_current_data(   data = sample_raw_eEPSC_df,   plot_treatment = \"Control\",   plot_category = 2,   current_type = \"eEPSC\",   y_variable = \"P1\",   pruned = \"no\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours )  raw_eEPSC_control_plots$AO plot_summary_current_data(   plot_category = 2,   plot_treatment = \"Control\",   data = sample_pruned_eEPSC_df$all_cells,   current_type = \"eEPSC\",   y_variable = \"amplitude\",   include_representative_trace = \"no\",   y_axis_limit = 175,   signif_stars = \"yes\",   t_test_df = sample_eEPSC_t_test_df,   hormone_added = \"Insulin\",   large_axis_text = \"no\",   shade_intervals = \"no\",   hormone_or_HFS_start_time = 5,   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options ) plot_spontaneous_current_trace(   file = sample_abf_file,   plot_colour = \"#6600cc\",   include_scale_bar = \"yes\",   plot_episode = \"epi1\",   scale_bar_x_length = 1,   scale_bar_y_length = 10,   plot_x_min = 1,   plot_x_max = 3 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot and analyze patch clamp electrophysiology data in R","text":"can install development version patchclampplotteR GitHub : load package library():","code":"# install.packages(\"pak\") pak::pak(\"christelinda-laureijs/patchclampplotteR\") library(patchclampplotteR)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/index.html","id":"analysis","dir":"","previous_headings":"","what":"Analysis","title":"Plot and analyze patch clamp electrophysiology data in R","text":"learn convert raw .abf data Clampfit .csv files package, please see vignettes Evoked Current Analysis Action Potential Analysis.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/index.html","id":"using-patchclampplotter","dir":"","previous_headings":"","what":"Using patchclampplotteR","title":"Plot and analyze patch clamp electrophysiology data in R","text":"Please see Getting Started page walk-major functions package.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new data — add_new_cells","title":"Add new data — add_new_cells","text":"function enables append new raw recording data onto existing datasheet. makes easy convenient merge cell parameters (age, sex, etc.) new data add current raw data. function also formats dataset immediately ready use functions like make_normalized_EPSC_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new data — add_new_cells","text":"","code":"add_new_cells(   new_raw_data_csv,   cell_characteristics_csv,   old_raw_data_csv,   data_type,   write_new_csv = \"yes\",   new_file_name,   decimal_places = 2,   injection_start_time = 265.4,   length_of_current_injection = 0.5 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new data — add_new_cells","text":"new_raw_data_csv filepath csv containing new raw data. data evoked current data (current_type == \"eEPSC\") must contain 4 columns: letter, ID, P1 P2. data spontaneous current data, columns must letter, ID, recording_num, trace, peak_amplitude time_of_peak. Please see section required columns details. cell_characteristics_csv filepath csv containing information cells. Please see import_cell_characteristics_df() description columns included. forget update include cell characteristics new letters new_raw_data_csv! old_raw_data_csv filepath csv containing current raw data. Since function appends new data old data, must current_type new data (e.g. columns must ). first time running function, start blank .csv file containing just column titles first row. data_type character (\"eEPSC\", \"sEPSC\", \"AP_parameter\" \"AP_count\") describing data type imported. write_new_csv character (\"yes\" \"\") describing new data written csv file. Defaults \"yes\". Please specify filename new csv file new_file_name. new_file_name filename csv containing new data appended old data. Must character representing filepath csv file. Examples include \"Data/20241118-Raw-eEPSC-data.csv\". decimal_places numeric value indicating number decimal places data rounded . Used reduce file size prevent incorrect representation number significant digits. injection_start_time action potential data : numeric value describing start time (ms) current injection applied. Used calculate latency fire. length_of_current_injection action potential data : numeric value indicating duration current injection (s, default 0.5 s).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new data — add_new_cells","text":"dataframe consisting old raw data information new cells appended . data_type == \"AP_parameter\" two new columns also added based calculations existing columns. latency_to_fire (time_to_peak - injection_start_time) antipeak_time_relative_to_threshold (time_of_antipeak - time_of_threshold). data_type == \"AP_count\" two new columns added. AP_frequency (Hz) current_injection (pA).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":"required-columns","dir":"Reference","previous_headings":"","what":"Required Columns","title":"Add new data — add_new_cells","text":"data evoked currents (data_type == \"eEPSC\"), data must contain following four columns: letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. ID character value recording filename. P1 numeric value representing amplitude first evoked current pA. P2 numeric value representing amplitude second evoked current pA. data spontaneous currents (data_type == \"sEPSC\"), data must contain following columns: letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. ID character value recording filename. recording_num numeric value representing recording number. incorporated switched concatenating recordings one, needs remain prevent breaking previous projects. set 1. trace numeric value representing trace (automatically generated Clampfit) current occurred. amplitude numeric value representing amplitude evoked current pA. time_of_peak numeric value representing time peak milliseconds relative trace number. automatically calculated Clampfit. data action potential parameters (data_type == \"AP_parameter\"), data must contain following columns: letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. ID character value recording filename. state character (\"Baseline\" \"Insulin\") representing timepoint data point belongs . time_of_threshold time (ms) membrane potential reaches threshold value. threshold threshold (mV). Determined using first derivative method, threshold membrane potential results derivative 10 mV/ms greater (Farries et al., 2010). t_11 value first derivative (action potential velocity mV/ms) threshold. first_sweep_with_APs sweep number first sweep (going lowest higher current injection values) resulted action potential. trace_start automated value Clampfit used analysis. peak_amplitude peak amplitude (pA) action potential relative threshold. time_to_peak time peak amplitude (ms) relative time threshold. antipeak_amplitude -hyperpolarization amplitude (pA) relative threshold. time_of_antipeak time -hyperpolarization (ms). half_width half-width, width action potential half peak amplitude.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/add_new_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add new data — add_new_cells","text":"","code":"if (FALSE) { # \\dontrun{ add_new_cells(   new_raw_data_csv = import_ext_data(\"sample_new_eEPSC_data.csv\"),   cell_characteristics_csv = import_ext_data(\"sample_cell_characteristics.csv\"),   old_raw_data_csv = import_ext_data(\"sample_eEPSC_data.csv\"),   data_type = \"eEPSC\",   write_new_csv = \"no\",   new_file_name = \"20241118-Raw-eEPSC-Data.csv\",   decimal_places = 2 ) } # }"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import raw .abf files as a dataframe — import_ABF_file","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"import_ABF_file() wrapper around abftools::abf2_load() abftools::MeltAbf(). converts array abf2_load() dataframe, also converts time minutes.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"","code":"import_ABF_file(file_name)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"file_name Filepath .abf file (e.g. \"Data/23711004.abf\")","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"dataframe 5 columns: time Time value Clampfit milliseconds x 10. example, 5 seconds = 50000 column. episode Character value (e.g. \"epi1\", \"epi2\") corresponds directly \"sweep\" Clampfit. current Current pA. voltage Voltage mV. time_sec Time seconds.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"file progresses .abf array dataframe can easily manipulated R.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ABF_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import raw .abf files as a dataframe — import_ABF_file","text":"","code":"import_ABF_file(import_ext_data(\"sample_abf.abf\"))"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Import cell characteristics — import_cell_characteristics_df","title":"Import cell characteristics — import_cell_characteristics_df","text":"import_cell_characteristics_df() wrapper around read.csv() import .csv file information cell (animal, age, sex, synapses, X- Y-coordinates, etc.). replaces NA values R_a column 0 remove errors caused missing data. resulting dataframe can merged raw data summary table used downstream statistical analyses.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import cell characteristics — import_cell_characteristics_df","text":"","code":"import_cell_characteristics_df(filename)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import cell characteristics — import_cell_characteristics_df","text":"filename filepath .csv file containing information cell characteristics. function uses ::() locate filepath. See details information required columns.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import cell characteristics — import_cell_characteristics_df","text":"dataframe","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"required-columns","dir":"Reference","previous_headings":"","what":"Required columns","title":"Import cell characteristics — import_cell_characteristics_df","text":"columns required raw .csv file: letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. Example: \"\" cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. sex character value \"Male\" \"Female\". X numeric value representing x-value cell's location µm. Y numeric value representing y-value cell's location µm. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). use characters (e.g. avoid \"P31\" use 31 instead). animal numeric value representing animal's ID number. synapses character value \"Glutamate\" \"GABA\". treatment character value \"Control\" \"HNMPA\". category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. R_a list values access resistance, monitored several timepoints throughout recording. See section R_a formatting .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"r-a-formatting","dir":"Reference","previous_headings":"","what":"R_a formatting","title":"Import cell characteristics — import_cell_characteristics_df","text":"R_a mandatory column information cell's access resistance. element column must sequence numbers, separated comma single space. Although read character, add quotation marks around values column. example, 1.5, 1.5, 1.6, 1.7, 1.7, 1.8 acceptable R_a value single cell. import_cell_characteristics_df() convert character value list numeric values (using stringr::str_split()). also convert blanks NA values 0. allows access visualized sparkline R_a column interactive summary table made make_interactive_summary_table().","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_cell_characteristics_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import cell characteristics — import_cell_characteristics_df","text":"","code":"import_cell_characteristics_df(import_ext_data(\"sample_cell_characteristics.csv\")) #>    letter    cell    sex      X      Y age animal  synapses     treatment #> 1      BN  25.1.2   Male 152.92 337.19  29   25.0 Glutamate       Control #> 2      AZ  21.1.1 Female 352.62 331.74  32   21.0 Glutamate       Control #> 3      AO  17.1.1   Male     NA     NA  39   17.0 Glutamate       Control #> 4      BO  27.2.1   Male     NA     NA  32   27.0 Glutamate         HNMPA #> 5      BT  30.2.1   Male 387.19 586.98  37   30.0 Glutamate         HNMPA #> 6      CG  35.1.3 Female 164.18 366.52  36   35.0 Glutamate         HNMPA #> 7       L 8.5.2.1   Male     NA     NA  38    8.5 Glutamate       Control #> 8      CZ  41.2.2   Male 296.51 492.90  28   41.0 Glutamate         HNMPA #> 9      FT  72.2.1 Female 153.33 337.18  39   72.0 Glutamate         HNMPA #> 10     FX  74.1.2 Female 234.69 495.50  28   74.0 Glutamate           PPP #> 11     GF  77.3.1 Female 217.23 323.55  36   77.0 Glutamate           PPP #> 12     GI  81.1.1 Female 235.96 284.23  28   81.0 Glutamate           PPP #> 13     GK  84.1.1   Male 248.74 574.44  35   84.0 Glutamate           PPP #> 14     GR  90.3.1   Male 313.50 415.97  34   90.0 Glutamate           PPP #> 15     GX  97.2.3   Male     NA     NA  33   97.0 Glutamate PPP_and_HNMPA #> 16     HB 100.1.1   Male 133.20 590.25  39  100.0 Glutamate PPP_and_HNMPA #> 17     HC 100.2.2   Male 172.54 576.26  39  100.0 Glutamate PPP_and_HNMPA #> 18     HG 103.2.1 Female     NA     NA  34  103.0 Glutamate PPP_and_HNMPA #> 19     HN 109.1.1   Male 288.97 400.18  38  109.0 Glutamate PPP_and_HNMPA #> 20     AV  20.3.1 Female  55.10 248.80  31   20.0 Glutamate       Control #>    category                                              R_a #> 1         2                     1.6, 1.7, 1.7, 1.8, 1.8, 2.0 #> 2         2           2.5, 2.6, 2.6, 2.9, 2.6, 2.6, 2.6, 2.7 #> 3         2                     1.9, 1.9, 1.8, 1.9, 2.0, 3.0 #> 4         2                     1.7, 1.7, 1.7, 1.8, 1.7, 1.8 #> 5         2 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.8, 1.5, 1.5, 1.5 #> 6         2                     2.0, 2.1, 2.1, 2.2, 2.2, 2.2 #> 7         2                     1.4, 1.5, 1.5, 1.6, 1.6, 1.5 #> 8         2                     2.0, 2.0, 2.1, 2.2, 2.1, 2.1 #> 9         2                     1.5, 1.5, 1.6, 1.7, 1.9, 2.0 #> 10        2                     1.9, 1.8, 1.9, 2.1, 2.0, 2.3 #> 11        2                     1.6, 1.6, 1.7, 1.7, 1.8, 1.7 #> 12        2                     1.3, 1.3, 1.3, 1.3, 1.4, 1.4 #> 13        2                          2.2, 2.2, 2.2, 2.3, 2.5 #> 14        2                     1.3, 1.4, 1.5, 1.5, 1.6, 1.8 #> 15        2                     1.6, 1.6, 1.7, 1.7, 1.8, 1.7 #> 16        2                     2.2, 2.5, 2.5, 2.6, 2.6, 2.6 #> 17        2                1.4, 1.5, 1.6, 1.9, 1.8, 2.3, 2.0 #> 18        2                                                0 #> 19        2                     1.7, 1.7, 1.7, 1.7, 1.7, 1.7 #> 20        2                     1.6, 1.8, 1.8, 2.0, 2.0, 2.0"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ext_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to external data for package examples — import_ext_data","title":"Get path to external data for package examples — import_ext_data","text":"Access sample files inst/extdata directory.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ext_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to external data for package examples — import_ext_data","text":"","code":"import_ext_data(file = NULL)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ext_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to external data for package examples — import_ext_data","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_ext_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to external data for package examples — import_ext_data","text":"","code":"import_ext_data() #> [1] \"empty_eEPSC_sheet.csv\"           \"empty_raw_eEPSC_datasheet.csv\"   #> [3] \"sample-ap-count-data.csv\"        \"sample_abf.abf\"                  #> [5] \"sample_ap_data.csv\"              \"sample_cell_characteristics.csv\" #> [7] \"sample_eEPSC_data.csv\"           \"sample_new_eEPSC_data.csv\"       #> [9] \"sample_theme_options.csv\"        import_ext_data(\"sample_cell_characteristics.csv\") #> [1] \"/home/runner/work/_temp/Library/patchclampplotteR/extdata/sample_cell_characteristics.csv\""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_theme_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Import colour theme — import_theme_colours","title":"Import colour theme — import_theme_colours","text":"Import colour theme","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_theme_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import colour theme — import_theme_colours","text":"","code":"import_theme_colours(filename)"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_theme_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import colour theme — import_theme_colours","text":"filename filepath .csv file containing colours theme parameters. Must contain two columns: option name parameter. Required parameters include: “ line_col, baseline_colour, etc. value value parameter","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_theme_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import colour theme — import_theme_colours","text":"dataframe one column row names.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/import_theme_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import colour theme — import_theme_colours","text":"","code":"import_theme_colours(import_ext_data(\"sample_theme_options.csv\"))"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_PPR_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","title":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","text":"function filters raw current data data belong one two time points. baseline period user-specified interval hormone protocol applied. \"/\" comparison paired-pulse ratio (PPR) useful determine mechanism involved modifying synaptic plasticity. example, PPR may related probability neurotransmitter release Oleskevich et al., 2000.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_PPR_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","text":"","code":"make_PPR_data(   data,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   PPR_min = 0,   PPR_max = 5,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme,   save_output_as_RDS = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_PPR_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","text":"data dataframe containing raw evoked current data generated make_normalized_EPSC_data(). include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. PPR_min numeric value representing minimum PPR value permitted filtered dataset. Defaults 0. PPR_max numeric value representing maximum PPR value permitted filtered dataset. Defaults 5. baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). post_hormone_interval character value specifying interval used data points hormone protocol applied. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_PPR_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","text":"dataframe containing columns make_normalized_EPSC_data(), filtered include PPR values PPR_min PPR_max within baseline_interval post_hormone_interval.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_PPR_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make paired-pulse ratio (PPR) dataframe for before vs. after comparisons — make_PPR_data","text":"","code":"make_PPR_data(   data = sample_raw_eEPSC_df,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   PPR_min = 0,   PPR_max = 5,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme = sample_treatment_names_and_colours ) #> # A tibble: 2,205 × 21 #> # Groups:   letter [19] #>    letter synapses  sex   treatment  time ID          P1    P2     X     Y   age #>    <fct>  <fct>     <fct> <fct>     <dbl> <fct>    <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 AO     Glutamate Male  Control    0    23623002  17.4  78.4    NA    NA    39 #>  2 AO     Glutamate Male  Control    0.08 23623002  24.1  58.9    NA    NA    39 #>  3 AO     Glutamate Male  Control    0.17 23623002  35.6  60.0    NA    NA    39 #>  4 AO     Glutamate Male  Control    0.25 23623002  15.8  32.3    NA    NA    39 #>  5 AO     Glutamate Male  Control    0.33 23623002  53.9  26.4    NA    NA    39 #>  6 AO     Glutamate Male  Control    0.42 23623002  45.5  74.8    NA    NA    39 #>  7 AO     Glutamate Male  Control    0.5  23623002  28.1  69.6    NA    NA    39 #>  8 AO     Glutamate Male  Control    0.58 23623002  27.8  62.0    NA    NA    39 #>  9 AO     Glutamate Male  Control    0.67 23623002  60.0  52.7    NA    NA    39 #> 10 AO     Glutamate Male  Control    0.75 23623002  46.9  60.3    NA    NA    39 #> # ℹ 2,195 more rows #> # ℹ 10 more variables: animal <dbl>, category <fct>, cell <chr>, PPR <dbl>, #> #   interval <fct>, baseline_range <lgl>, baseline_mean <dbl>, #> #   P1_transformed <dbl>, P2_transformed <dbl>, state <chr>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive overview table of all recordings — make_interactive_summary_table","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"function pulls information multiple dataframes display everything cell (cell characteristics, evoked current data, spontaneous current data) interactive table. table made reactable::reactable(), can filtered, sorted, rearranged.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"","code":"make_interactive_summary_table(   cell_characteristics_dataframe,   pruned_eEPSC_dataframe,   pruned_sEPSC_dataframe,   treatment_colour_theme,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   include_all_categories = \"yes\",   list_of_categories = NULL,   save_output_as_RDS = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"cell_characteristics_dataframe dataframe containing cell characteristics, generated import_cell_characteristics_df(). pruned_eEPSC_dataframe dataframe containing pruned evoked current data, generated make_pruned_EPSC_data(), current_type == \"eEPSC\". pruned_sEPSC_dataframe dataframe containing pruned spontaneous current data, generated make_pruned_EPSC_data(), current_type == \"sEPSC\". treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. include_all_categories character (\"yes\" \"\") specifying plot include data categories. \"\", must specify list categories list_of_categories. list_of_categories list character values describing categories plot. Defaults NULL, since include_all_categories \"yes\" default. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder. Note: interactive table, raw dataframe later inserted reactable::reactable(). useful want build table using different package, want generate customized reactable table . ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"reactable HTML widget can viewed RStudio exported RMarkdown HTML documents. save_output_as_RDS == \"yes\", raw dataframe used create reactable also exported .rds file Data/Output-Data--R/.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"table contains sparklines evoked current spontaneous current amplitudes time, allows visually compare overall response group cells. sparklines colour-coded treatment, allowing quickly identify trends response hormone/protocol cells belonging particular treatment.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_interactive_summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive overview table of all recordings — make_interactive_summary_table","text":"","code":"# Note, the number of treatments is limited to \"Control\" to reduce run-time make_interactive_summary_table(   cell_characteristics_dataframe = sample_cell_characteristics,   pruned_eEPSC_dataframe = sample_pruned_eEPSC_df,   pruned_sEPSC_dataframe = sample_pruned_sEPSC_df,   treatment_colour_theme = sample_treatment_names_and_colours,   include_all_treatments = \"no\",   list_of_treatments = c(\"Control\"),   include_all_categories = \"yes\",   list_of_categories = NULL,   save_output_as_RDS = \"no\" ) #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  #> Warning: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.   {\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Letter\":[\"AZ\",\"L\"],\"Display_names\":[\"Control\",\"Control\"],\"Treatment\":[\"Control\",\"Control\"],\"Synapses\":[\"Glutamate\",\"Glutamate\"],\"Sex\":[\"Female\",\"Male\"],\"P1_transformed\":[[62.26,46.12,32.25,39.39,39.81,41.32,38.36,26.95,28.55,28.82,25.5,21.56,21.22,23.46,27.11,26.42,24.26,27.33,23.27,22.65,27.37,23.27,19.09,22.01,20.36],[80.99,86.55,81.97,69.78,65.64,41.51,13.85,11.22,4.41,2.93,6.07,5.33,3.43,4.43,4.33,5.42,5.08,5.42,1.81,6.24,4.66,4.19,3.57,4.98,4.74]],\"Spont_amplitude_transformed\":[[104.13,98.88,97.74,101.26,98.7,98.7,95.37,96.88,97.62,94.46,96.34,96.34,98.21,94.3,92.84,91.44,93.78,93.78,95.94,93.83,92.8,95.52,95.74,95.74,90.25,86.34,86.97,84.07,86.33],[82.3,97.63,110.27,114.25,90.5,90.5,95.81,96.4,90.68,86.29,83.08,83.08,70.41,72.84,66.16,67.85,51.74,51.74,45.93,51.07,51.75,47.82,46.62,46.62,38.66,42.99,40.77,43.97,45.88]],\"R_a\":[[2.5,2.6,2.6,2.9,2.6,2.6,2.6,2.7],[1.4,1.5,1.5,1.6,1.6,1.5]],\"X\":[350,\"NA\"],\"Y\":[330,\"NA\"],\"Age\":[32,38],\"Animal\":[21,8.5],\"Category\":[2,2],\"Cell\":[\"21.1.1\",\"8.5.2.1\"],\"Colours\":[\"#6600cc\",\"#6600cc\"]},\"columns\":[{\"id\":\"Letter\",\"name\":\"Letter\",\"type\":\"factor\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"id\":\"Display_names\",\"name\":\"Treatment\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Treatment\",\"name\":\"Treatment\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"show\":false},{\"id\":\"Synapses\",\"name\":\"Synapses\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Sex\",\"name\":\"Sex\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"filterMethod\":\"function(rows, columnId, filterValue) {\\n        return rows.filter(function(row) {\\n          return String(row.values[columnId]).toUpperCase() === filterValue.toUpperCase()\\n        })\\n      }\"},{\"id\":\"P1_transformed\",\"name\":\"eEPSC amplitude (pA)\",\"type\":\"list\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"filterable\":false,\"cell\":[{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"a1b70870343a9f77dcdf7ff971757bc6\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-ac96cb3ee4656e2e9ec3\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-ac96cb3ee4656e2e9ec3\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[62.26,46.12,32.25,39.39,39.81,41.32,38.36,26.95,28.55,28.82,25.5,21.56,21.22,23.46,27.11,26.42,24.26,27.33,23.27,22.65,27.37,23.27,19.09,22.01,20.36],\\\"margin\\\":{\\\"top\\\":3,\\\"right\\\":13,\\\"bottom\\\":2,\\\"left\\\":13},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":1,\\\"showArea\\\":true},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"none\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"auto\\\",\\\"labelOffset\\\":7},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 29.5484) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]},{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"8537b003fe7e04a609b791873816004e\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-e5c8c404fe174e4c81bd\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-e5c8c404fe174e4c81bd\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[80.98999999999999,86.55,81.97,69.78,65.64,41.51,13.85,11.22,4.41,2.93,6.07,5.33,3.43,4.43,4.33,5.42,5.08,5.42,1.81,6.24,4.66,4.19,3.57,4.98,4.74],\\\"margin\\\":{\\\"top\\\":3,\\\"right\\\":13,\\\"bottom\\\":2,\\\"left\\\":13},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":1,\\\"showArea\\\":true},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"none\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"auto\\\",\\\"labelOffset\\\":7},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 21.142) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]}]},{\"id\":\"Spont_amplitude_transformed\",\"name\":\"sEPSC amplitude (pA)\",\"type\":\"list\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"filterable\":false,\"cell\":[{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"9234776198bd5f28f5bbb4a121eb038f\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-36aa3d2a04d42bbc2145\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-36aa3d2a04d42bbc2145\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[104.13,98.88,97.73999999999999,101.26,98.7,98.7,95.37,96.88,97.62,94.45999999999999,96.34,96.34,98.20999999999999,94.3,92.84,91.44,93.78,93.78,95.94,93.83,92.8,95.52,95.73999999999999,95.73999999999999,90.25,86.34,86.97,84.06999999999999,86.33],\\\"margin\\\":{\\\"top\\\":3,\\\"right\\\":13,\\\"bottom\\\":2,\\\"left\\\":13},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":1,\\\"showArea\\\":true},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"none\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"auto\\\",\\\"labelOffset\\\":7},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 94.6310344827586) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]},{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"ede3d6cef76a9f869c818a4261fcb0a6\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-febe03efa1a2d8d52a86\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-febe03efa1a2d8d52a86\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[82.3,97.63,110.27,114.25,90.5,90.5,95.81,96.40000000000001,90.68000000000001,86.29000000000001,83.08,83.08,70.41,72.84,66.16,67.84999999999999,51.74,51.74,45.93,51.07,51.75,47.82,46.62,46.62,38.66,42.99,40.77,43.97,45.88],\\\"margin\\\":{\\\"top\\\":3,\\\"right\\\":13,\\\"bottom\\\":2,\\\"left\\\":13},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":1,\\\"showArea\\\":true},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"none\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"auto\\\",\\\"labelOffset\\\":7},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(0))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 69.09) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]}]},{\"id\":\"R_a\",\"name\":\"Ra (MΩ)\",\"type\":\"list\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"filterable\":false,\"cell\":[{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"c9c6688cd677078073074c70acc2a5fe\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-1fb4450895fe099f74a1\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-1fb4450895fe099f74a1\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[2.5,2.6,2.6,2.9,2.6,2.6,2.6,2.7],\\\"margin\\\":{\\\"top\\\":5,\\\"right\\\":24,\\\"bottom\\\":3,\\\"left\\\":24},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":0.1,\\\"showArea\\\":false},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\",\\\"last\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(1))\\\",\\\"labelPosition\\\":\\\"{(d, i) => ((i === 0) ? 'left'\\\\n           : (i === 7) ? 'right'\\\\n           : 'top')}\\\",\\\"labelOffset\\\":6},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(1))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 2.6375) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.6.attribs.labelPosition\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]},{\"name\":\"WidgetContainer\",\"attribs\":{\"key\":\"628118e02936a052761c0be1b71a8b9e\"},\"children\":[{\"name\":\"Fragment\",\"attribs\":[],\"children\":[{\"name\":\"div\",\"attribs\":{\"id\":\"htmlwidget-10b3b7155e8045a1b2ad\",\"style\":{\"width\":\"100%\",\"height\":\"22px\"},\"className\":\"dataui html-widget\"},\"children\":[]},{\"name\":\"script\",\"attribs\":{\"type\":\"application/json\",\"data-for\":\"htmlwidget-10b3b7155e8045a1b2ad\"},\"children\":[\"{\\\"x\\\":{\\\"tag\\\":{\\\"name\\\":\\\"SparklineResponsive\\\",\\\"attribs\\\":{\\\"data\\\":[1.4,1.5,1.5,1.6,1.6,1.5],\\\"margin\\\":{\\\"top\\\":5,\\\"right\\\":24,\\\"bottom\\\":3,\\\"left\\\":24},\\\"height\\\":22,\\\"width\\\":\\\"100%\\\"},\\\"children\\\":[{\\\"name\\\":\\\"SparklineLineSeries\\\",\\\"attribs\\\":{\\\"curve\\\":\\\"cardinal\\\",\\\"showLine\\\":true,\\\"stroke\\\":\\\"#6600cc\\\",\\\"strokeWidth\\\":1,\\\"fill\\\":\\\"#6600cc\\\",\\\"fillOpacity\\\":0.1,\\\"showArea\\\":false},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"all\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"last\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"min\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"max\\\"],\\\"stroke\\\":\\\"transparent\\\",\\\"fill\\\":\\\"transparent\\\",\\\"size\\\":1.1},\\\"children\\\":[]},{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"points\\\":[\\\"first\\\",\\\"last\\\"],\\\"fill\\\":\\\"transparent\\\",\\\"stroke\\\":\\\"transparent\\\",\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '0.8em', stroke: 'transparent'}, d.toFixed(1))\\\",\\\"labelPosition\\\":\\\"{(d, i) => ((i === 0) ? 'left'\\\\n           : (i === 5) ? 'right'\\\\n           : 'top')}\\\",\\\"labelOffset\\\":6},\\\"children\\\":[]},{\\\"name\\\":\\\"HorizontalReferenceLine\\\",\\\"attribs\\\":{\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"PatternLines\\\",\\\"attribs\\\":{\\\"id\\\":\\\"NA\\\",\\\"stroke\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"BandLine\\\",\\\"attribs\\\":{\\\"fill\\\":\\\"transparent\\\"},\\\"children\\\":[]},{\\\"name\\\":\\\"TooltipComponent\\\",\\\"attribs\\\":[],\\\"children\\\":[{\\\"name\\\":\\\"SparklinePointSeries\\\",\\\"attribs\\\":{\\\"size\\\":0,\\\"renderLabel\\\":\\\"(d) => React.createElement('tspan', {fill: '#6600cc', fontSize: '1.1em', fontWeight: 'bold', stroke: 'white'}, d.toFixed(1))\\\",\\\"labelPosition\\\":\\\"{(yVal, i) => ((yVal > 1.51666666666667) ? 'bottom'\\\\n       : 'top')}\\\",\\\"labelOffset\\\":5},\\\"children\\\":[]}]}]},\\\"class\\\":\\\"reactR_markup\\\"},\\\"evals\\\":[\\\"tag.children.6.attribs.renderLabel\\\",\\\"tag.children.6.attribs.labelPosition\\\",\\\"tag.children.10.children.0.attribs.renderLabel\\\",\\\"tag.children.10.children.0.attribs.labelPosition\\\"],\\\"jsHooks\\\":[]}\"]}]}]}]},{\"id\":\"X\",\"name\":\"X\",\"type\":\"numeric\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Y\",\"name\":\"Y\",\"type\":\"numeric\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Age\",\"name\":\"Age\",\"type\":\"numeric\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Animal\",\"name\":\"Animal\",\"type\":\"numeric\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Category\",\"name\":\"Category\",\"type\":\"numeric\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Cell\",\"name\":\"Cell\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\"},{\"id\":\"Colours\",\"name\":\"Colours\",\"type\":\"character\",\"vAlign\":\"center\",\"headerVAlign\":\"center\",\"show\":false}],\"filterable\":true,\"defaultSorted\":[{\"id\":\"Category\",\"desc\":false},{\"id\":\"Treatment\",\"desc\":false},{\"id\":\"Animal\",\"desc\":false}],\"defaultPageSize\":15,\"showPageSizeOptions\":true,\"elementId\":\"cell-table\",\"dataKey\":\"2060ff7b1c1109666c6518f697c3fee8\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.attribs.columns.4.filterMethod\"],\"jsHooks\":[]}"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and normalize raw current data — make_normalized_EPSC_data","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"make_normalized_EPSC_data() creates dataframe evoked spontaneous current data raw .csv file. function create new column containing evoked spontaneous current amplitudes normalized relative mean current amplitude baseline period. evoked current data, function also adds column paired pulse ratio (PPR = P2/P1, P2 amplitude second evoked current).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"","code":"make_normalized_EPSC_data(   filename = \"Data/Sample-eEPSC-data.csv\",   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   baseline_length = 5,   interval_length = 5,   decimal_places = 2,   negative_transform_currents = \"yes\",   save_output_as_RDS = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"filename filepath .csv file. See add_new_cells() function merge raw data (.csv 4 columns: letter, ID, P1, P2) cell-characteristics.csv file (columns factors like animal, age, sex, synapses). Please see section \"Required columns\" . current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". min_time_value Minimum time value (numeric; minutes), defaults 0. max_time_value Maximum recording length (numeric; minutes). data points filtered time values less equal value. Defaults 25. baseline_length Length baseline (numeric; minutes). Refers data collected applying hormone, antagonist, protocol like high frequency stimulation. Defaults 5. interval_length Length interval (numeric; minutes). Used divide dataset broad ranges statistical analysis. Important! max_recording_length must evenly divisible interval_length. Defaults 5. decimal_places numeric value indicating number decimal places data rounded . Used reduce file size prevent incorrect representation number significant digits. negative_transform_currents character (\"yes\" \"\") describing P1 P2 negative transformed. \"yes\", values multiplied (-1). applies current_type == \"eEPSC\" - ignored spontaneous current data. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"dataframe can viewed used analyses R. New modified columns include: P1 (evoked currents ) May negative-transformed negative_transform == \"yes\" P2 (evoked currents ) May negative-transformed negative_transform == \"yes\" PPR (evoked currents ) numeric value represents paired pulse ratio (PPR) evoked currents, generated using dplyr::mutate(PPR = P2/P1). interval character value indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. Time <= 5) FALSE times. baseline_mean numeric value representing mean evoked current amplitude baseline period. different baseline_mean letter. P1_transformed (evoked currents ) numeric value representing first evoked current amplitude (pA) normalized relative mean amplitude recording's baseline. P2_transformed (evoked currents ) numeric value representing second evoked current amplitude (pA) normalized relative mean amplitude recording's baseline. amplitude_transformed (spontaneous currents ) numeric value representing spontaneous current amplitude (pA) normalized relative mean amplitude recording's baseline.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":"required-basic-columns","dir":"Reference","previous_headings":"","what":"Required basic columns","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"matter data evoked current type - columns included data. letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. synapses character value (e.g. \"Glutamate\" \"GABA\"). sex character value (e.g. \"Male\" \"Female\"). treatment character value (e.g. \"Control\", \"HNMPA\"). time numeric value represents time minutes. column autogenerated add_new_cells(). ID character value recording filename. X numeric value representing x-value cell's location µm. Leave blank data. Y numeric value representing y-value cell's location µm. Leave blank data. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). animal numeric value representing animal's ID number. category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. Evoked current data: data evoked currents (current_type == \"eEPSC\"), data must contain basic columns mentioned Required basic columns plus columns: P1 numeric value representing amplitude first evoked current pA. P2 numeric value representing amplitude second evoked current pA. Spontaneous current data: data spontaneous currents (current_type == \"sEPSC\"), data must contain basic columns mentioned Required basic columns plus columns: recording_num numeric value representing recording number. incorporated switched concatenating recordings one, needs remain prevent breaking previous projects. set 1. trace numeric value representing trace (automatically generated Clampfit) current occurred. time_of_peak numeric value representing time peak milliseconds relative trace number. automatically calculated Clampfit. time numeric value representing absolute time current happened, relative start recording. autogenerated. See add_new_cells() description true time value (time) calculated recording_num trace. amplitude numeric value representing amplitude evoked current pA.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_normalized_EPSC_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and normalize raw current data — make_normalized_EPSC_data","text":"","code":"make_normalized_EPSC_data(   filename = import_ext_data(\"sample_eEPSC_data.csv\"),   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   interval_length = 5,   baseline_length = 5,   decimal_places = 2,   negative_transform_currents = \"yes\" ) #> # A tibble: 5,680 × 21 #> # Groups:   letter [19] #>    letter synapses  sex   treatment  time ID          P1    P2     X     Y   age #>    <fct>  <fct>     <fct> <fct>     <dbl> <fct>    <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 AO     Glutamate Male  Control    0    23623002  17.4  78.4    NA    NA    39 #>  2 AO     Glutamate Male  Control    0.08 23623002  24.1  58.9    NA    NA    39 #>  3 AO     Glutamate Male  Control    0.17 23623002  35.6  60.0    NA    NA    39 #>  4 AO     Glutamate Male  Control    0.25 23623002  15.8  32.3    NA    NA    39 #>  5 AO     Glutamate Male  Control    0.33 23623002  53.9  26.4    NA    NA    39 #>  6 AO     Glutamate Male  Control    0.42 23623002  45.5  74.8    NA    NA    39 #>  7 AO     Glutamate Male  Control    0.5  23623002  28.1  69.6    NA    NA    39 #>  8 AO     Glutamate Male  Control    0.58 23623002  27.8  62.0    NA    NA    39 #>  9 AO     Glutamate Male  Control    0.67 23623002  60.0  52.7    NA    NA    39 #> 10 AO     Glutamate Male  Control    0.75 23623002  46.9  60.3    NA    NA    39 #> # ℹ 5,670 more rows #> # ℹ 10 more variables: animal <dbl>, category <fct>, cell <chr>, r_a <lgl>, #> #   PPR <dbl>, interval <fct>, baseline_range <lgl>, baseline_mean <dbl>, #> #   P1_transformed <dbl>, P2_transformed <dbl>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"make_pruned_eEPSC_df() creates dataframe evoked spontaneous current data summarized per minute (user-defined interval). Current amplitudes collapsed mean amplitude per minute. equivalent GraphPad Prism's \"prune rows\" function reduce data summary values every n rows.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"","code":"make_pruned_EPSC_data(   data = patchclampplotteR::sample_raw_eEPSC_df,   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   baseline_length = 5,   interval_length = 1,   decimal_places = 2,   save_output_as_RDS = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"data data.frame object generated using make_normalized_EPSC_data(). must contain columns outlined Required columns section , already generated output make_normalized_EPSC_data(). current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". min_time_value Minimum time value (numeric; minutes), defaults 0. max_time_value Maximum recording length (numeric; minutes). data points filtered time values less equal value. Defaults 25. baseline_length Length baseline (numeric; minutes). Refers data collected applying hormone, antagonist, protocol like high frequency stimulation. Defaults 5. interval_length Length interval (minutes). Used divide dataset broad ranges statistical analysis. Defaults 1 one summary point per minute. decimal_places numeric value indicating number decimal places data rounded . Used reduce file size prevent incorrect representation number significant digits. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"list containing 3 dataframes can viewed used analyses R. dataframes : individual_cells for_table all_cells highly recommend assigning list object named something like pruned_eEPSC_df make easy reference dataframes logical names (e.g. pruned_eEPSC_df$all_cells). dataframes : individual_cells dataframe containing current data individual cell, data reduced summary  point per per minute (another value different interval_length set). dataframe contains columns already raw data, like category, letter sex plus  new columns. New columns evoked current data (current_type == \"eEPSC\") include: interval_pruned character value describing interval used pruning function. data pruned per minute, \"t0to1\", \"t1to2\", \"t2to3\", etc. mean_P1 mean amplitude (pA) first evoked current (P1) specific interval. average data points within interval. example, mean_P1 interval \"t0to1\" contains average current amplitude data points within first minute recording. sd_P1 standard deviation P1. n number data points used. se standard error P1. cv coefficient variation P1. cv_inverse_square inverse coefficient variation, squared. enable variance analysis, Huijstee & Kessels (2020). baseline_mean mean amplitude first evoked current baseline period. category, letter, sex, treatment, etc. Columns raw data. definition columns, please see documentation make_normalized_EPSC_data(). time upper time value interval (e.g. 2 minutes \"t1to2\") used x-axis plots plot_raw_current_data(). New columns spontaneous current data (current_type == \"sEPSC\") include: mean_amplitude mean amplitude normalized spontaneous current amplitude specific interval (obtained make_normalized_EPSC_data()). mean_raw_amplitude mean amplitude raw spontaneous current amplitude specific interval. sd_amplitude standard deviation normalized spontaneous current amplitudes. n number currents frequency frequency (Hz) currents interval. se standard error normalized spontaneous current amplitudes. letter, category, interval, synapses Columns inherited raw data. time upper time value interval (e.g. 2 minutes \"t1to2\") used x-axis plots plot_summary_current_data(). baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. Time <= 5) FALSE times. baseline_mean_frequency mean spontaneous frequency baseline period. frequency_transformed spontaneous current frequency (Hz), normalized relative baseline current frequency. for_table dataframe containing two columns: letter P1_transformed (eEPSC) spont_amplitude_transformed (sEPSC). current data collapsed single row letter, current data letter stored list. required create sparklines current amplitude time within cell summary table. See make_cell_summary_df() make_interactive_summary_table(). all_cells dataframe consisting data within single treatment grouped summarized per minute (variable change interval_length something 1). Columns like category sex retained raw data. New columns evoked current data (current_type == \"eEPSC\") : interval_pruned character value describing interval used pruning function. data pruned per minute, \"t0to1\", \"t1to2\", \"t2to3\", etc. mean_P1_all_cells mean amplitude (pA) first evoked current (P1) specific interval across cells. sd_P1_all_cells standard deviation P1. n number data points used. se_P1_all_cells standard error P1. cv_P1_all_cells coefficient variation P1. New columns spontaneous current data (current_type == \"sEPSC\") : interval_pruned character value describing interval used pruning function. data pruned per minute, \"t0to1\", \"t1to2\", \"t2to3\", etc. mean_all_amplitude mean normalized amplitude (% Baseline) spontaneous current amplitudes specific interval across cells. mean_all_raw_amplitude mean raw amplitude (pA) spontaneous current amplitudes specific interval across cells. sd_all_amplitude standard deviation normalized spontaneous current amplitudes across cells. n number data points used. se_all_amplitude standard error normalized spontaneous currents across cells. sd_all_raw_amplitude standard deviation raw spontaneous current amplitudes across cells. se_raw_amplitude standard error raw spontaneous currents across cells. mean_all_frequency mean normalized frequency (% Baseline frequency) spontaneous current amplitudes across cells interval. sd_all_frequency standard deviation normalized frequency spontaneous current amplitudes across cells interval. se_frequency standard error normalized frequency spontaneous current amplitudes across cells interval. mean_all_raw_frequency mean raw frequency (Hz) spontaneous current amplitudes across cells interval. sd_all_raw_frequency standard deviation raw frequency spontaneous current amplitudes across cells interval. se_raw_frequency standard error raw frequency spontaneous current amplitudes across cells interval.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"required-evoked-currents-columns","dir":"Reference","previous_headings":"","what":"Required evoked currents columns","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"columns generated automatically make_normalized_EPSC_data(), details, can look sample_raw_eEPSC_df see example incoming raw dataset data argument look like. data evoked currents (current_type == \"eEPSC\"), data must contain basic columns mentioned Required basic columns plus columns: PPR numeric value represents paired pulse ratio (PPR) evoked currents, generated make_normalized_EPSC_data(). interval character value indicating interval data belong (e.g. \"t0to5\" first 5 minutes, \"t5to10\"). Generated automatically make_normalized_EPSC_data(). baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. time <= 5) FALSE times. Generated automatically make_normalized_EPSC_data(). baseline_mean numeric value representing mean evoked current amplitude baseline period. different baseline_mean letter. Generated automatically make_normalized_EPSC_data(). P1_transformed numeric value representing first evoked current amplitude (pA) normalized relative mean amplitude recording's baseline. Generated automatically make_normalized_EPSC_data(). P2_transformed numeric value representing second evoked current amplitude (pA) normalized relative mean amplitude recording's baseline. Generated automatically make_normalized_EPSC_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"required-spontaneous-currents-columns","dir":"Reference","previous_headings":"","what":"Required spontaneous currents columns","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"data spontaneous currents (current_type == \"sEPSC\"), data must contain basic columns mentioned Required basic columns plus columns listed . detail, look sample_raw_sEPSC_df see example incoming raw dataset data argument look like. interval character value indicating interval data belong (e.g. \"t0to5\" first 5 minutes, \"t5to10\"). Generated automatically make_normalized_EPSC_data(). baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. Time <= 5) FALSE times. Generated automatically make_normalized_EPSC_data(). baseline_mean numeric value representing mean evoked current amplitude baseline period. different baseline_mean letter. Generated automatically make_normalized_EPSC_data(). amplitude_transformed numeric value representing spontaneous current amplitude (pA) normalized relative mean amplitude recording's baseline. Generated automatically make_normalized_EPSC_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"required-basic-columns","dir":"Reference","previous_headings":"","what":"Required basic columns","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"matter data evoked current type - columns included data. letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. synapses character value (e.g. \"Glutamate\" \"GABA\"). sex character value (e.g. \"Male\" \"Female\"). treatment character value (e.g. \"Control\", \"HNMPA\"). time numeric value represents time minutes. column autogenerated add_new_cells(). ID character value recording filename. X numeric value representing x-value cell's location µm. Leave blank data. Y numeric value representing y-value cell's location µm. Leave blank data. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). animal numeric value representing animal's ID number. category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. Evoked current data: data evoked currents (current_type == \"eEPSC\"), data must contain basic columns mentioned Required basic columns plus columns: P1 numeric value representing amplitude first evoked current pA. P2 numeric value representing amplitude second evoked current pA. Spontaneous current data: data spontaneous currents (current_type == \"sEPSC\"), data must contain basic columns mentioned Required basic columns plus columns: recording_num numeric value representing recording number. incorporated switched concatenating recordings one, needs remain prevent breaking previous projects. set 1. trace numeric value representing trace (automatically generated Clampfit) current occurred. time_of_peak numeric value representing time peak milliseconds relative trace number. automatically calculated Clampfit. time numeric value representing absolute time current happened, relative start recording. autogenerated. See add_new_cells() description true time value (time) calculated recording_num trace. amplitude numeric value representing amplitude evoked current pA.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_pruned_EPSC_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune and summarize raw current data per minute — make_pruned_EPSC_data","text":"","code":"make_pruned_EPSC_data(   data = sample_raw_eEPSC_df,   current_type = \"eEPSC\",   min_time_value = 0,   max_time_value = 25,   baseline_length = 5,   interval_length = 1,   decimal_places = 2 ) #> $individual_cells #> # A tibble: 473 × 14 #>    category letter sex   treatment interval_pruned mean_P1 sd_P1     n    se #>    <fct>    <fct>  <fct> <fct>     <fct>             <dbl> <dbl> <dbl> <dbl> #>  1 2        AO     Male  Control   t0to1             36.4  13.8     13  3.83 #>  2 2        AO     Male  Control   t1to2             38.1  21.4     12  6.18 #>  3 2        AO     Male  Control   t2to3             39.4  22.2     12  6.41 #>  4 2        AO     Male  Control   t3to4             39.2  18.5     12  5.34 #>  5 2        AO     Male  Control   t4to5             30.8  19.7     12  5.69 #>  6 2        AO     Male  Control   t5to6             21.3  15.6     12  4.52 #>  7 2        AO     Male  Control   t6to7             13.6  17.4     12  5.01 #>  8 2        AO     Male  Control   t7to8             14.4  16.5     12  4.77 #>  9 2        AO     Male  Control   t8to9              5.68  2       12  0.58 #> 10 2        AO     Male  Control   t9to10             7.45  5.84    12  1.69 #> # ℹ 463 more rows #> # ℹ 5 more variables: cv <dbl>, cv_inverse_square <dbl>, time <dbl>, #> #   baseline_mean <dbl>, synapses <fct> #>  #> $for_table #> # A tibble: 19 × 2 #>    letter P1_transformed #>    <fct>  <list>         #>  1 AO     <dbl [25]>     #>  2 AZ     <dbl [25]>     #>  3 BN     <dbl [25]>     #>  4 BO     <dbl [25]>     #>  5 BT     <dbl [25]>     #>  6 CG     <dbl [25]>     #>  7 CZ     <dbl [25]>     #>  8 FT     <dbl [25]>     #>  9 FX     <dbl [25]>     #> 10 GF     <dbl [25]>     #> 11 GI     <dbl [25]>     #> 12 GK     <dbl [25]>     #> 13 GR     <dbl [25]>     #> 14 GX     <dbl [25]>     #> 15 HB     <dbl [25]>     #> 16 HC     <dbl [25]>     #> 17 HG     <dbl [23]>     #> 18 HN     <dbl [25]>     #> 19 L      <dbl [25]>     #>  #> $all_cells #> # A tibble: 198 × 10 #>    category interval_pruned sex    treatment   mean_P1_all_cells sd_P1_all_cells #>    <fct>    <fct>           <fct>  <fct>                   <dbl>           <dbl> #>  1 2        t0to1           Female Control                 141.            NA    #>  2 2        t0to1           Female HNMPA                   117.            11.0  #>  3 2        t0to1           Female PPP                      97.3           10.2  #>  4 2        t0to1           Female PPP_and_HN…              94.2           NA    #>  5 2        t0to1           Male   Control                  95.9           11.2  #>  6 2        t0to1           Male   HNMPA                   123.            21.5  #>  7 2        t0to1           Male   PPP                     110.            13.6  #>  8 2        t0to1           Male   PPP_and_HN…             116.             4.9  #>  9 2        t1to2           Female Control                 104.            NA    #> 10 2        t1to2           Female HNMPA                    96.0            1.74 #> # ℹ 188 more rows #> # ℹ 4 more variables: n <dbl>, se_P1_all_cells <dbl>, cv_P1_all_cells <dbl>, #> #   time <dbl> #>   make_pruned_EPSC_data(   data = sample_raw_sEPSC_df,   current_type = \"sEPSC\",   min_time_value = 0,   max_time_value = 25,   baseline_length = 5,   interval_length = 1,   decimal_places = 2 ) #> $individual_cells #> # A tibble: 195 × 17 #> # Groups:   letter [7] #>    category letter sex    treatment interval_pruned mean_amplitude #>    <fct>    <fct>  <fct>  <fct>     <fct>                    <dbl> #>  1 2        AZ     Female Control   t0to1                    104.  #>  2 2        AZ     Female Control   t1to2                     98.9 #>  3 2        AZ     Female Control   t2to3                     97.7 #>  4 2        AZ     Female Control   t3to4                    101.  #>  5 2        AZ     Female Control   t4to5                     98.7 #>  6 2        AZ     Female Control   t4to5                     98.7 #>  7 2        AZ     Female Control   t5to6                     95.4 #>  8 2        AZ     Female Control   t6to7                     96.9 #>  9 2        AZ     Female Control   t7to8                     97.6 #> 10 2        AZ     Female Control   t8to9                     94.5 #> # ℹ 185 more rows #> # ℹ 11 more variables: mean_raw_amplitude <dbl>, sd_amplitude <dbl>, n <dbl>, #> #   frequency <dbl>, se <dbl>, interval <fct>, synapses <fct>, time <dbl>, #> #   baseline_range <lgl>, baseline_mean_frequency <dbl>, #> #   frequency_transformed <dbl> #>  #> $for_table #> # A tibble: 7 × 2 #>   letter spont_amplitude_transformed #>   <fct>  <list>                      #> 1 AZ     <dbl [29]>                  #> 2 BO     <dbl [26]>                  #> 3 FX     <dbl [28]>                  #> 4 GR     <dbl [26]>                  #> 5 GX     <dbl [29]>                  #> 6 HC     <dbl [28]>                  #> 7 L      <dbl [29]>                  #>  #> $all_cells #> # A tibble: 167 × 19 #>    category interval_pruned sex    treatment     mean_all_amplitude #>    <fct>    <fct>           <fct>  <fct>                      <dbl> #>  1 2        t0to1           Female Control                    104.  #>  2 2        t0to1           Female PPP                         98.5 #>  3 2        t0to1           Male   Control                     82.3 #>  4 2        t0to1           Male   HNMPA                       98.1 #>  5 2        t0to1           Male   PPP                        106.  #>  6 2        t0to1           Male   PPP_and_HNMPA              105.  #>  7 2        t1to2           Female Control                     98.9 #>  8 2        t1to2           Female PPP                        101.  #>  9 2        t1to2           Male   Control                     97.6 #> 10 2        t1to2           Male   HNMPA                      101.  #> # ℹ 157 more rows #> # ℹ 14 more variables: mean_all_raw_amplitude <dbl>, sd_all_amplitude <dbl>, #> #   n <dbl>, se_amplitude <dbl>, sd_all_raw_amplitude <dbl>, #> #   se_raw_amplitude <dbl>, mean_all_frequency <dbl>, sd_all_frequency <dbl>, #> #   se_frequency <dbl>, mean_all_raw_frequency <dbl>, #> #   sd_all_raw_frequency <dbl>, se_raw_frequency <dbl>, time <dbl>, #> #   interval <fct> #>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_summary_EPSC_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","title":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","text":"make_summary_EPSC_data() allows divide data long recording (e.g. 30 minutes) evenly-spaced intervals (e.g. 5 minutes). generate summary data like mean current amplitude interval. can useful inserting statistical models compare effect sizes across broad stretches time. interval length previously specified make_normalized_EPSC_data() using interval_length argument.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_summary_EPSC_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","text":"","code":"make_summary_EPSC_data(   data = patchclampplotteR::sample_raw_eEPSC_df,   current_type = \"eEPSC\",   save_output_as_RDS = \"no\",   decimal_places = 2 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_summary_EPSC_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","text":"data data.frame object. data evoked currents (current_type == \"eEPSC\"), raw evoked current data generated using make_normalized_EPSC_data(). data spontaneous currents (current_type == \"sEPSC\"), pruned data $individual_cells dataset generated using make_pruned_EPSC_data(). current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder. decimal_places numeric value indicating number decimal places data rounded . Used reduce file size prevent incorrect representation number significant digits.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_summary_EPSC_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","text":"dataframe summary data mean current amplitude, coefficient variation, standard deviation, standard error, variance, variance--mean ratio, inverse coefficient variation squared interval. New columns evoked current data (current_type == \"eEPSC\") include: mean_P1_transformed amplitude first evoked current amplitude (% Baseline eEPSC amplitude) normalized mean baseline amplitude averaged interval. mean_P1_raw amplitude first evoked current amplitude (pA) averaged interval. n number datapoints used create averaged values. Corresponds number sweeps per interval. sd standard deviation normalized evoked current data (P1_transformed). cv coefficient variation P1_transformed. se standard error P1_transformed. cv_inverse_square inverse squared coefficient variation P1_transformed. variance variance P1_transformed. VMR variance--mean ratio (VMR) P1_transformed. interval character value indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. letter, synapses, sex, treatment, etc. Unmodified columns original dataset describing cell's properties. New columns spontaneous current data (current_type == \"sEPSC\") include: mean_transformed_amplitude average normalized spontaneous current amplitude (% Baseline sEPSC amplitude). mean_raw_amplitude average raw spontaneous current amplitude (pA). n number datapoints used create average. sd_transformed_amplitude standard deviation normalized spontaneous current data (mean_transformed_amplitude). se_transformed_amplitude standard error mean_transformed_amplitude. mean_transformed_frequency average normalized frequency (% Baseline frequency). sd_transformed_frequency standard deviation mean_transformed_frequency. se_frequency standard error mean_transformed_frequency. mean_raw_frequency average raw frequency (Hz). letter, synapses, sex, treatment, etc. Unmodified columns original dataset describing cell's properties.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_summary_EPSC_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize current data per 5-min for statistical tests — make_summary_EPSC_data","text":"","code":"make_summary_EPSC_data(   data = sample_raw_eEPSC_df,   current_type = \"eEPSC\",   save_output_as_RDS = \"no\",   decimal_places = 2 ) #> # A tibble: 95 × 20 #>    category letter sex    treatment interval mean_P1_transformed mean_P1_raw #>    <fct>    <fct>  <fct>  <fct>     <fct>                  <dbl>       <dbl> #>  1 2        AO     Male   Control   t0to5                  100         36.8  #>  2 2        AO     Male   Control   t5to10                  34.0       12.5  #>  3 2        AO     Male   Control   t10to15                 17.7        6.49 #>  4 2        AO     Male   Control   t15to20                 18.6        6.85 #>  5 2        AO     Male   Control   t20to25                 21.3        7.82 #>  6 2        AZ     Female Control   t0to5                  100         44.3  #>  7 2        AZ     Female Control   t5to10                  74.1       32.8  #>  8 2        AZ     Female Control   t10to15                 53.7       23.8  #>  9 2        AZ     Female Control   t15to20                 56.0       24.8  #> 10 2        AZ     Female Control   t20to25                 50.7       22.4  #> # ℹ 85 more rows #> # ℹ 13 more variables: n <dbl>, sd <dbl>, cv <dbl>, se <dbl>, #> #   cv_inverse_square <dbl>, variance <dbl>, VMR <dbl>, age <dbl>, #> #   animal <dbl>, X <dbl>, Y <dbl>, time <dbl>, synapses <fct>  make_summary_EPSC_data(   data = sample_pruned_sEPSC_df$individual_cells,   current_type = \"sEPSC\",   save_output_as_RDS = \"no\",   decimal_places = 2 ) #> # A tibble: 35 × 16 #> # Groups:   category, letter, sex, treatment [7] #>    category letter sex    treatment interval mean_transformed_amplitude #>    <fct>    <fct>  <fct>  <fct>     <fct>                         <dbl> #>  1 2        AZ     Female Control   t0to5                         100.  #>  2 2        AZ     Female Control   t5to10                         96.6 #>  3 2        AZ     Female Control   t10to15                        94.5 #>  4 2        AZ     Female Control   t15to20                        94.6 #>  5 2        AZ     Female Control   t20to25                        88.3 #>  6 2        BO     Male   HNMPA     t0to5                         100.  #>  7 2        BO     Male   HNMPA     t5to10                         89.3 #>  8 2        BO     Male   HNMPA     t10to15                        81.9 #>  9 2        BO     Male   HNMPA     t15to20                        82.2 #> 10 2        BO     Male   HNMPA     t20to25                        82.0 #> # ℹ 25 more rows #> # ℹ 10 more variables: mean_raw_amplitude <dbl>, #> #   sd_transformed_amplitude <dbl>, n <dbl>, se_transformed_amplitude <dbl>, #> #   mean_transformed_frequency <dbl>, sd_transformed_frequency <dbl>, #> #   se_transformed_frequency <dbl>, mean_raw_frequency <dbl>, time <dbl>, #> #   synapses <fct>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_variance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dataframe with variance measures — make_variance_data","title":"Make dataframe with variance measures — make_variance_data","text":"make_variance_data creates dataframe containing variance measures two time points. baseline period user-specified interval hormone protocol applied. variance measures inverse coefficient variation squared variance--mean ratio (VMR). \"vs. \" comparison two variance measures useful determine mechanism involved modifying synaptic plasticity. information, please see Huijstee & Kessels (2020).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_variance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dataframe with variance measures — make_variance_data","text":"","code":"make_variance_data(   data,   df_category,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme,   save_output_as_RDS = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_variance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dataframe with variance measures — make_variance_data","text":"data dataframe containing summary data generated make_summary_EPSC_data(). df_category numeric value describing experimental category. sample dataset package, 2 represents experiments insulin applied continuously 5-minute baseline period. , plot_treatment represents antagonists present brain slice, animals fasted, etc. include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). post_hormone_interval character value indicating name interval used \"\" timepoint comparison. Defaults \"t20to25\", can changed. Make sure matches interval present data treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_variance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dataframe with variance measures — make_variance_data","text":"dataframe containing columns within summary data (see sample_summary_eEPSC_df detailed description columns) plus three additional columns: state character value describing data point belongs baseline interval (\"Baseline\") interval hormone protocol applied (\"Post-modification\"). intervals selected baseline_interval post_hormone_interval. mean_cv_inverse_square mean inverse coefficient variation squared within specific state. mean_VMR mean variance--mean ratio within specific state.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/make_variance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make dataframe with variance measures — make_variance_data","text":"","code":"make_variance_data(   data = sample_summary_eEPSC_df,   df_category = 2,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   treatment_colour_theme = sample_treatment_names_and_colours,   save_output_as_RDS = \"no\" ) #> # A tibble: 38 × 23 #> # Groups:   treatment, state [8] #>    category letter sex    treatment interval mean_P1_transformed mean_P1_raw #>    <fct>    <fct>  <fct>  <fct>     <fct>                  <dbl>       <dbl> #>  1 2        AO     Male   Control   t0to5                 100          36.8  #>  2 2        AO     Male   Control   t20to25                21.3         7.82 #>  3 2        AZ     Female Control   t0to5                 100          44.3  #>  4 2        AZ     Female Control   t20to25                50.7        22.4  #>  5 2        BN     Male   Control   t0to5                 100          72.1  #>  6 2        BN     Male   Control   t20to25                19.1        13.8  #>  7 2        L      Male   Control   t0to5                 100          77.0  #>  8 2        L      Male   Control   t20to25                 5.75        4.43 #>  9 2        BO     Male   HNMPA     t0to5                 100          87.7  #> 10 2        BO     Male   HNMPA     t20to25                24.3        21.4  #> # ℹ 28 more rows #> # ℹ 16 more variables: n <dbl>, sd <dbl>, cv <dbl>, se <dbl>, #> #   cv_inverse_square <dbl>, variance <dbl>, VMR <dbl>, age <dbl>, #> #   animal <dbl>, X <dbl>, Y <dbl>, time <dbl>, synapses <fct>, state <chr>, #> #   mean_cv_inverse_square <dbl>, mean_VMR <dbl>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"patchclampplotteR: Plot and Analyze Raw Patch Clamp Electrophysiology Data — patchclampplotteR-package","title":"patchclampplotteR: Plot and Analyze Raw Patch Clamp Electrophysiology Data — patchclampplotteR-package","text":"Create publication-quality figures whole-cell patch clamp electrophysiology data. can plot evoked spontaneous current amplitude time, mean evoked/spontaneous data summarized sex, variance analysis plots, much .","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"patchclampplotteR: Plot and Analyze Raw Patch Clamp Electrophysiology Data — patchclampplotteR-package","text":"Maintainer: Christelinda Laureijs cslaureijs@gmail.com (ORCID)","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a customized ggplot2 theme — patchclampplotteR_theme","title":"Add a customized ggplot2 theme — patchclampplotteR_theme","text":"Add customized ggplot2 theme","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a customized ggplot2 theme — patchclampplotteR_theme","text":"","code":"patchclampplotteR_theme()"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a customized ggplot2 theme — patchclampplotteR_theme","text":"ggplot theme","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/patchclampplotteR_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a customized ggplot2 theme — patchclampplotteR_theme","text":"","code":"ggplot2::ggplot(cars, ggplot2::aes(x = speed, y = dist)) +   ggplot2::geom_point() +   ggplot2::labs(x = \"Speed (mph)\", y = \"Stopping Distance (ft)\") +   patchclampplotteR_theme()"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/perform_t_tests_for_summary_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","title":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","text":"function enables perform series paired t-tests comparing mean current amplitude within interval relative mean current amplitude baseline. uses paired_t_test function rstatix, paired = TRUE Holm's adjustment multiple comparisons (p.adjust.method = \"holm\"). resulting output table can also used apply significance stars plot plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/perform_t_tests_for_summary_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","text":"","code":"perform_t_tests_for_summary_plot(   data,   test_category,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   current_type = \"eEPSC\",   parameter = \"amplitude\",   baseline_interval = \"t0to5\",   interval_length = 5,   treatment_colour_theme,   save_output_as_RDS = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/perform_t_tests_for_summary_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","text":"data dataframe containing summary data generated make_summary_EPSC_data(). test_category numeric value describing experimental category. sample dataset package, 2 represents experiments insulin applied continuously 5-minute baseline period. include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". parameter character value specifying parameter plotted y-axis. evoked currents (current_type = \"eEPSC\"), available parameter \"amplitude\", contains amplitudes normalized relative baseline. spontaneous currents (current_type = \"sEPSC\"), available parameters \"amplitude\" (normalized currents), \"raw_amplitude\", \"frequency\" (normalized frequency) \"raw_frequency\". baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). interval_length Length interval (numeric; minutes). Used divide dataset broad ranges statistical analysis. Important! max_recording_length must evenly divisible interval_length. Defaults 5. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. save_output_as_RDS character (\"yes\" \"\") describing resulting object saved RDS file raw data folder.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/perform_t_tests_for_summary_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","text":"dataframe","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/perform_t_tests_for_summary_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-tests for EPSC summary plots — perform_t_tests_for_summary_plot","text":"","code":"perform_t_tests_for_summary_plot(   data = sample_summary_eEPSC_df,   test_category = 2,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   current_type = \"eEPSC\",   parameter = \"amplitude\",   baseline_interval = \"t0to5\",   interval_length = 5,   treatment_colour_theme = sample_treatment_names_and_colours,   save_output_as_RDS = \"no\" ) #>        treatment                 .y. group1  group2 n1 statistic df p_string #> 1        Control mean_P1_transformed  t0to5 t10to15  4      4.89  3    0.033 #> 2        Control mean_P1_transformed  t0to5 t15to20  4      6.96  3    0.018 #> 3        Control mean_P1_transformed  t0to5 t20to25  4      8.01  3    0.016 #> 4        Control mean_P1_transformed  t0to5  t5to10  4      2.28  3     0.11 #> 5          HNMPA mean_P1_transformed  t0to5 t10to15  5      3.15  4     0.13 #> 6          HNMPA mean_P1_transformed  t0to5 t15to20  5      2.99  4     0.13 #> 7          HNMPA mean_P1_transformed  t0to5 t20to25  5      3.19  4     0.13 #> 8          HNMPA mean_P1_transformed  t0to5  t5to10  5      3.10  4     0.13 #> 9            PPP mean_P1_transformed  t0to5 t10to15  5      0.89  4     0.84 #> 10           PPP mean_P1_transformed  t0to5 t15to20  5      1.50  4     0.63 #> 11           PPP mean_P1_transformed  t0to5 t20to25  5      1.96  4     0.48 #> 12           PPP mean_P1_transformed  t0to5  t5to10  5      0.78  4     0.84 #> 13 PPP_and_HNMPA mean_P1_transformed  t0to5 t10to15  5      0.94  4   > 0.99 #> 14 PPP_and_HNMPA mean_P1_transformed  t0to5 t15to20  5      0.84  4   > 0.99 #> 15 PPP_and_HNMPA mean_P1_transformed  t0to5 t20to25  5      1.39  4     0.95 #> 16 PPP_and_HNMPA mean_P1_transformed  t0to5  t5to10  5     -0.59  4   > 0.99 #>    significance_stars asterisk_time #> 1                   *          12.5 #> 2                   *          17.5 #> 3                   *          22.5 #> 4                               7.5 #> 5                              12.5 #> 6                              17.5 #> 7                              22.5 #> 8                               7.5 #> 9                              12.5 #> 10                             17.5 #> 11                             22.5 #> 12                              7.5 #> 13                             12.5 #> 14                             17.5 #> 15                             22.5 #> 16                              7.5"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","title":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","text":"Plot compare action potential parameters treatment","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","text":"","code":"plot_AP_comparison(   data,   plot_treatment = \"Control\",   plot_category = 2,   baseline_label = \"Baseline\",   post_hormone_label = \"Post-hormone\",   y_variable,   y_axis_title,   test_type,   treatment_colour_theme,   theme_options,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","text":"data action potential data generated add_new_cells() data_type == \"AP\". plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. baseline_label character value x-axis label applied pre-hormone state. Defaults \"Baseline\". post_hormone_label character value x-axis label applied post-hormone post-protocol state. Defaults \"Post-hormone\" likely change hormone protocol name. y_variable character value naming variable plotted y-axis. Must column present data. Examples include peak_amplitude, time_to_peak, antipeak_amplitude half_width. y_axis_title character value used define \"pretty\" version y_variable. become y-axis label ggplot. Examples include \"Peak Amplitude (pA)\" \"Time Peak (ms)\". test_type character (must \"wilcox.test\", \"t.test\" \"none\") describing statistical model used create significance bracket comparing pre- post-hormone groups. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","text":"ggplot object. save_plot_png == \"yes\", also generate .png file folder Figures/Action-potentials relative project directory. treatment y_variable included filename.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot and compare action potential parameters before and after a treatment — plot_AP_comparison","text":"","code":"plot_AP_comparison(   sample_AP_data,   plot_treatment = \"Control\",   plot_category = 2,   y_variable = \"peak_amplitude\",   y_axis_title = \"Peak Amplitude (pA)\",   theme_options = sample_theme_options,   baseline_label = \"Baseline\",   test_type = \"wilcox.test\",   post_hormone_label = \"Insulin\",   treatment_colour_theme = sample_treatment_names_and_colours,   save_plot_png = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_frequencies_multiple_treatments.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","title":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","text":"function allows generate plot action potential frequency (y-axis) current injection (x-axis), coloured treatment. linetype indicates state data belong (recording taken baseline hormone treatment).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_frequencies_multiple_treatments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","text":"","code":"plot_AP_frequencies_multiple_treatments(   data,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   plot_category = 2,   treatment_colour_theme,   filename_suffix = \"\",   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_frequencies_multiple_treatments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","text":"data Action potential frequency data imported add_new_cells() data_type == \"AP_count\" include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. filename_suffix Optional character value add suffix filename .png file created plot. useful specified custom list treatments. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_frequencies_multiple_treatments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","text":"ggplot object. save_plot_png == \"yes\", also generate .png file folder Figures/Action-potentials relative project directory.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_AP_frequencies_multiple_treatments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot action potential frequency curves for multiple treatments — plot_AP_frequencies_multiple_treatments","text":"","code":"plot_AP_frequencies_multiple_treatments(data = sample_AP_count_data, include_all_treatments = \"yes\", plot_category = 2, treatment_colour_theme = sample_treatment_names_and_colours) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"plot_PPR_data_multiple_treatments() creates categorical scatter plot experimental state (.e. grouped baseline/) treatment x-axis, paired-pulse ratio (PPR) y-axis. also lines connecting \"\" data point \"\" data point letter. plot_PPR_data_one_treatment() one treatment.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"","code":"plot_PPR_data_multiple_treatments(   data,   include_all_treatments = \"yes\",   list_of_treatments = NULL,   plot_category = 2,   baseline_label = \"B\",   post_hormone_label = \"A\",   test_type = \"t.test\",   treatment_colour_theme,   theme_options,   filename_suffix = \"\",   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"data Paired pulse ratio data generated make_PPR_data(). include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. baseline_label character value x-axis label applied pre-hormone state. Defaults \"Baseline\". post_hormone_label character value x-axis label applied post-hormone post-protocol state. Defaults \"Post-hormone\" likely change hormone protocol name. test_type character (must \"wilcox.test\", \"t.test\" \"none\") describing statistical model used create significance bracket comparing pre- post-hormone groups. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. filename_suffix Optional character value add suffix filename .png file created plot. useful specified custom list treatments. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"ggplot object. save_plot_png defined \"yes\", also generate .png file folder Figures/Evoked-currents/PPR relative project directory.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"specify test_type, function perform paired t-test paired wilcox test add brackets significance stars ggsignif::geom_signif().","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_multiple_treatments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a PPR plot for multiple treatments — plot_PPR_data_multiple_treatments","text":"","code":"plot_PPR_data_multiple_treatments(   data = sample_PPR_df,   include_all_treatments = \"yes\",   plot_category = 2,   baseline_label = \"B\",   post_hormone_label = \"I\",   test_type = \"t.test\",   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"plot_PPR_data_one_treatment() creates categorical scatter plot experimental state (.e. baseline/) x-axis paired-pulse ratio (PPR) y-axis. also lines connecting \"\" data point \"\" data point letter.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"","code":"plot_PPR_data_one_treatment(   data,   plot_treatment = \"Control\",   plot_category = 2,   baseline_label = \"Baseline\",   post_hormone_label = \"Post-hormone\",   test_type = \"t.test\",   large_axis_text = \"no\",   treatment_colour_theme,   theme_options,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"data Paired pulse ratio data generated make_PPR_data(). plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. baseline_label character value x-axis label applied pre-hormone state. Defaults \"Baseline\". post_hormone_label character value x-axis label applied post-hormone post-protocol state. Defaults \"Post-hormone\" likely change hormone protocol name. test_type character (must \"wilcox.test\", \"t.test\" \"none\") describing statistical model used create significance bracket comparing pre- post-hormone groups. large_axis_text character (\"yes\" \"\"). \"yes\", ggplot theme layer applied increases size axis text. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"ggplot object. save_plot_png == \"yes\", also generate .png file folder Figures/Evoked-currents/PPR relative project directory. treatment included filename.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"specify test_type, function perform paired t-test paired wilcox test add brackets significance stars ggsignif::geom_signif().","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_PPR_data_one_treatment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a PPR plot for a single treatment — plot_PPR_data_one_treatment","text":"","code":"plot_PPR_data_one_treatment(   data = sample_PPR_df,   plot_treatment = \"Control\",   plot_category = 2,   baseline_label = \"Baseline\",   post_hormone_label = \"Insulin\",   test_type = \"t.test\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options,   save_plot_png = \"no\" ) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_baseline_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make baseline comparison plot — plot_baseline_data","title":"Make baseline comparison plot — plot_baseline_data","text":"function creates scatterplot y_variables raw amplitude grouped according treatment. data limited values baseline period, allowing quick comparison baseline parameters across treatments. evoked currents, raw amplitude available comparison. spontaneous currents, raw amplitude raw frequency baseline period can plotted.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_baseline_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make baseline comparison plot — plot_baseline_data","text":"","code":"plot_baseline_data(   data,   current_type = \"eEPSC\",   y_variable = \"raw_amplitude\",   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   filename_suffix = \"\",   large_axis_text = \"no\",   plot_width = 8,   treatment_colour_theme,   theme_options,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_baseline_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make baseline comparison plot — plot_baseline_data","text":"data dataframe containing summary data generated make_summary_EPSC_data(). current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". y_variable character describing parameter used y-axis. current_type == \"eEPSC\", allowed y_variable \"raw_amplitude\". current_type == \"sEPSC\", allowed y_variables \"raw_amplitude\" \"raw_frequency\". Note: make sense use normalized/baseline transformed amplitudes, since 100, graph flat line. include_all_treatments character (\"yes\" \"\") specifying plot include data treatments. \"\", must specify list treatments list_of_treatments. list_of_treatments list character values describing treatments plot. Defaults NULL, since include_all_treatments \"yes\" default. baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). filename_suffix Optional character value add suffix filename .png file created plot. useful specified custom list treatments. large_axis_text character (\"yes\" \"\"). \"yes\", ggplot theme layer applied increases axis text. plot_width numeric value specifying width plot. Defaults 8, need adjust depending many treatments . treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_baseline_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make baseline comparison plot — plot_baseline_data","text":"ggplot object. save_plot_png == \"yes\", also generate .png file Figures/Evoked-currents/Output-summary-plots Figures/Spontaneous-currents/Output-summary-plots. .png filename contain y_variable.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_baseline_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make baseline comparison plot — plot_baseline_data","text":"","code":"plot_baseline_data(   data = sample_summary_eEPSC_df,   current_type = \"eEPSC\",   y_variable = \"raw_amplitude\",   include_all_treatments = \"yes\",   list_of_treatments = NULL,   baseline_interval = \"t0to5\",   large_axis_text = \"no\",   plot_width = 8,   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options,   save_plot_png = \"no\" ) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_cv_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a plot of coefficient of variation over time — plot_cv_data","title":"Make a plot of coefficient of variation over time — plot_cv_data","text":"plot_cv_data() enables save plot coefficient variation evoked current amplitudes time.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_cv_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a plot of coefficient of variation over time — plot_cv_data","text":"","code":"plot_cv_data(   data,   plot_treatment = \"Control\",   treatment_colour_theme,   theme_options,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_cv_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a plot of coefficient of variation over time — plot_cv_data","text":"data dataframe pruned current data cells. third dataframe list generated make_pruned_EPSC_data(). plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_cv_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a plot of coefficient of variation over time — plot_cv_data","text":"ggplot object. save_plot_png == \"yes\" also generate .png file folder Figures/Evoked-currents/CV relative project directory. treatment included filename.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_cv_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a plot of coefficient of variation over time — plot_cv_data","text":"","code":"plot_cv_data(   data = sample_pruned_eEPSC_df$all_cells,   plot_treatment = \"Control\",   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours,   save_plot_png = \"no\" ) #> Warning: Removed 25 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_raw_current_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make raw current plots — plot_raw_current_data","title":"Make raw current plots — plot_raw_current_data","text":"function enables create scatterplot raw evoked (spontaneous) current amplitude time minutes. plot title pulled recording ID (letter column raw data), subtitle include sex treatment. plot also contain horizontal line annotation displayed time region hormone applied. high-frequency stimulation (HFS) protocol used, plot display arrow label \"HFS\" indicate time HFS applied.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_raw_current_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make raw current plots — plot_raw_current_data","text":"","code":"plot_raw_current_data(   data,   plot_treatment = \"Control\",   plot_category = 2,   current_type = \"eEPSC\",   y_variable = \"P1\",   pruned = \"no\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   hormone_end_time = NULL,   theme_options,   treatment_colour_theme,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_raw_current_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make raw current plots — plot_raw_current_data","text":"data dataframe containing raw evoked current data generated make_normalized_EPSC_data(). plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". y_variable character value specifying variable plotted y-axis. evoked currents (current_type = \"eEPSC\"), available y_variables \"P1\", \"P1_transformed\", \"mean_P1\" \"PPR\". Note: select \"mean_P1\", must set pruned argument \"yes\". spontaneous currents (current_type = \"sEPSC\"), available y_variables \"amplitude\" \"frequency\". pruned character value (\"yes\" \"\") specifying data pruned. used evoked current data y_variable = \"mean_P1. plot present data means error bars. hormone_added character value used label line annotating period hormone applied. Examples include \"500 nM Insulin\", \"CCK + Leptin\", \"Insulin\". applied high-frequency stimulation (HFS) protocol instead, write \"HFS\", annotation arrow added instead. hormone_or_HFS_start_time numeric value indicating time (minutes) hormone added HFS applied. set annotation line start point. hormone_end_time numeric value indicating time (minutes) hormone stopped applied, washout experiment. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_raw_current_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make raw current plots — plot_raw_current_data","text":"list ggplot objects, list element scatterplot one recording. save_plot_png == \"yes\", also generate .png file ggplot element list. figures exported Figures/Evoked-currents/Output-individual-plots Figures/Spontaneous-currents/Output-individual-plots, depending current_type. .png filename contain letter. data pruned, filename also include _pruned filename. data normalized (y_variable == \"P1_transformed), title include _normalized filename. Example filenames include \".png\", \"A_normalized\", \"A_pruned.png\".","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_raw_current_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make raw current plots — plot_raw_current_data","text":"","code":"plot_raw_current_data(   data = sample_raw_eEPSC_df,   plot_treatment = \"Control\",   plot_category = 2,   current_type = \"eEPSC\",   y_variable = \"P1\",   pruned = \"no\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   theme_options = sample_theme_options,   treatment_colour_theme = sample_treatment_names_and_colours,   save_plot_png = \"no\" ) #> $AO  #>  #> $AZ  #>  #> $BN  #>  #> $L  #>"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"plot_spontaneous_current_parameter_comparison() useful function see spontaneous current amplitude frequency change adding hormone. function produces sina plots (raw datapoints top) raw amplitude (raw frequency) two time intervals: baseline interval, user-specified interval hormone modification applied.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"","code":"plot_spontaneous_current_parameter_comparison(   data,   plot_category = 2,   plot_treatment = \"Control\",   y_variable = \"raw_amplitude\",   hormone_added = \"Insulin\",   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   test_type = \"wilcox.test\",   large_axis_text = \"no\",   treatment_colour_theme,   theme_options,   save_plot_png,   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"data Summary data spontaneous currents generated using make_summary_EPSC_data() current_type == \"sEPSC\". plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. y_variable character value (\"raw_amplitude\" \"raw_frequency\") . Normalized amplitude frequency available baseline values 100. hormone_added character value used label line annotating period hormone applied. Examples include \"500 nM Insulin\", \"CCK + Leptin\", \"Insulin\". applied high-frequency stimulation (HFS) protocol instead, write \"HFS\", annotation arrow added instead. baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). post_hormone_interval character value specifying interval used data points hormone protocol applied. must match post_hormone_interval used make_variance_data(). test_type character (must \"wilcox.test\", \"t.test\" \"none\") describing statistical model used create significance bracket comparing pre- post-hormone groups. large_axis_text character (\"yes\" \"\"). \"yes\", ggplot theme layer applied increases axis text. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"ggplot object","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"specify test_type, function perform paired t-test paired wilcox test add brackets significance stars ggsignif::geom_signif().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_parameter_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visually compare spontaneous current parameters — plot_spontaneous_current_parameter_comparison","text":"","code":"plot_spontaneous_current_parameter_comparison(   data = sample_summary_sEPSC_df,   plot_category = 2,   plot_treatment = \"Control\",   y_variable = \"raw_amplitude\",   hormone_added = \"Insulin\",   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   test_type = \"wilcox.test\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options,   save_plot_png = \"no\" )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","title":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","text":"plot_spontaneous_current_trace() generates plot raw current amplitude time specified sweep ABF file. requires dataframe generated raw .abf data import_ABF_file(). function returns ggplot object optional scale bar.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","text":"","code":"plot_spontaneous_current_trace(   file,   plot_colour,   include_scale_bar = \"yes\",   plot_episode = \"epi1\",   scale_bar_x_start = 1.25,   scale_bar_x_length = 0.5,   scale_bar_y_start = 15,   scale_bar_y_length = 20,   plot_x_min = 1,   plot_x_max = 5,   plot_y_min = -100,   plot_y_max = 35,   save_plot_pngs = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","text":"file dataframe containing least columns: time, episode, current, voltage, time_sec. easy way obtain importing raw .abf file import_ABF_file() function. plot_colour character value naming colour plot. include_scale_bar character value determines scale bar added plot. Allowed values \"yes\" \"\". plot_episode character value describing sweep (e.g. epi1) used plot. scale_bar_x_start numeric value describing x-axis position scale bar. scale_bar_x_length numeric value describing horizontal span (seconds) scale bar. automatically converted displayed milliseconds. scale_bar_y_start numeric value describing y-axis position scale bar. scale_bar_y_length numeric value describing vertical span (pA) scale bar. plot_x_min numeric value describing minimum value x-axis (seconds). plot_x_max numeric value describing maximum value x-axis (seconds). plot_y_min numeric value describing minimum value y-axis (pA). plot_y_max numeric value describing maximum value y-axis (pA). save_plot_pngs character (\"yes\" \"\") defining plot saved PNG ggplot::ggsave(). ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","text":"ggplot object. save_plot_PNGs defined \"yes\", also generate .png file folder Figures/Spontaneous-currents/Representative-Traces relative project directory.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_spontaneous_current_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a representative spontaneous current trace — plot_spontaneous_current_trace","text":"","code":"plot_spontaneous_current_trace(   file = sample_abf_file,   plot_colour = \"#6600cc\",   include_scale_bar = \"yes\",   plot_episode = \"epi1\",   scale_bar_x_length = 1,   scale_bar_y_length = 10,   plot_x_min = 1,   plot_x_max = 3 )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_summary_current_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a summary plot for a specific treatment — plot_summary_current_data","title":"Make a summary plot for a specific treatment — plot_summary_current_data","text":"function enables create scatterplot mean evoked (spontaneous) current amplitude time minutes. data summarized treatment sex, averaged per minute. data presented mean +/- standard error.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_summary_current_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a summary plot for a specific treatment — plot_summary_current_data","text":"","code":"plot_summary_current_data(   data,   plot_category = 2,   plot_treatment = \"Control\",   current_type = \"eEPSC\",   y_variable = \"amplitude\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   include_representative_trace = \"no\",   representative_trace_filename,   y_axis_limit,   signif_stars = \"no\",   t_test_df,   large_axis_text = \"no\",   shade_intervals = \"no\",   theme_options,   treatment_colour_theme,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_summary_current_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a summary plot for a specific treatment — plot_summary_current_data","text":"data dataframe containing pruned summary data cells. third element list generated make_pruned_EPSC_data(). plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. current_type character describing current type. Allowed values \"eEPSC\" \"sEPSC\". y_variable character value specifying variable plotted y-axis. evoked currents (current_type = \"eEPSC\"), available y_variables \"P1\", \"P1_transformed\", \"mean_P1\" \"PPR\". Note: select \"mean_P1\", must set pruned argument \"yes\". spontaneous currents (current_type = \"sEPSC\"), available y_variables \"amplitude\" \"frequency\". hormone_added character value used label line annotating period hormone applied. Examples include \"500 nM Insulin\", \"CCK + Leptin\", \"Insulin\". applied high-frequency stimulation (HFS) protocol instead, write \"HFS\", annotation arrow added instead. hormone_or_HFS_start_time numeric value indicating time (minutes) hormone added HFS applied. set annotation line start point. include_representative_trace character (\"yes\" \"\") describing representative trace included overlay plot. pulls png file stored Figures/Representative-Traces/\". Please specify file-name representative_trace_filename. representative_trace_filename character value describing filename representative trace. name .png file stored within subfolder Figures/Representative-Traces/. y_axis_limit numeric value describing maximum value y-axis. signif_stars character (\"yes\" \"\") describing significance stars included overlay plot. \"yes\", must specify dataframe containing results t-test, generated using perform_t_tests_for_summary_plot(). t_test_df dataframe t-test results, generated using perform_t_tests_for_summary_plot(). Important note! t-test dataframe must filtered match conditions data argument, significance stars misleading. large_axis_text character (\"yes\" \"\"). \"yes\", ggplot theme layer applied increases size axis text. shade_intervals character (\"yes\" \"\"). \"yes\", ggplot theme layer applied adds lightly shaded rectangles highlight 5-minute intervals. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_summary_current_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a summary plot for a specific treatment — plot_summary_current_data","text":"ggplot object. save_plot_png == \"yes\", also generate .png file exported Figures/Evoked-currents/Output-summary-plots Figures/Spontaneous-currents/Output-summary-plots, depending current_type. .png filename format: \"Summary-plot-plot_treatment-category-plot_category-file_name_ending-text_size.png\". text_size added using large_axis_text (\"LARGE\" included filename). file_name_ending automatically added spontaneous current data specify y_variable plotted (e.g. \"raw_amplitude\"). example filename : \"Summary-plot-Control-category-2.png\" \"Summary-plot-Control-category-2_raw_amplitude.png\" spontaneous currents.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_summary_current_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a summary plot for a specific treatment — plot_summary_current_data","text":"","code":"plot_summary_current_data(   data = sample_pruned_eEPSC_df$all_cells,   plot_category = 2,   plot_treatment = \"Control\",   current_type = \"eEPSC\",   y_variable = \"amplitude\",   hormone_added = \"Insulin\",   hormone_or_HFS_start_time = 5,   include_representative_trace = \"no\",   y_axis_limit = 175,   signif_stars = \"yes\",   t_test_df = sample_eEPSC_t_test_df,   large_axis_text = \"no\",   shade_intervals = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options ) #> Warning: Removed 25 rows containing missing values or values outside the scale range #> (`geom_segment()`)."},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot variance comparison for a treatment — plot_variance_comparison_data","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"plot_variance_comparison_data() creates connected  plot time categorical variable (.e. baseline/) x-axis variance measure y-axis. also lines connecting \"\" data point \"\" data point letter.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"","code":"plot_variance_comparison_data(   data,   plot_category,   plot_treatment,   variance_measure = \"cv\",   baseline_interval = \"t0to5\",   baseline_label = \"Baseline\",   post_hormone_interval = \"t20to25\",   post_hormone_label = \"Insulin\",   test_type = \"wilcox.test\",   large_axis_text = \"no\",   treatment_colour_theme,   theme_options,   save_plot_png = \"no\",   ggplot_theme = patchclampplotteR_theme() )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"data dataframe generated using make_variance_data(). plot_category numeric value specifying category, can used differentiate different protocol types. sample dataset package, plot_category == 2 represents experiments insulin applied continuously 5-minute baseline period. plot_treatment character value specifying treatment like plot (e.g. \"Control\"). plot_treatment represents antagonists present brain slice, animals fasted, etc. variance_measure character value (\"cv\" \"VMR\"). variance measures can either inverse coefficient variation squared (variance_measure == \"cv\") variance--mean ratio (variance_measure == \"VMR\"). baseline_interval character value indicating name interval used baseline. Defaults \"t0to5\", can changed. Make sure matches baseline interval set make_normalized_EPSC_data(). baseline_label character value x-axis label applied pre-hormone state. Defaults \"Baseline\". post_hormone_interval character value specifying interval used data points hormone protocol applied. must match post_hormone_interval used make_variance_data(). post_hormone_label character value x-axis label applied post-hormone post-protocol state. Defaults \"Post-hormone\" likely change hormone protocol name. test_type character (must \"wilcox.test\", \"t.test\" \"none\") describing statistical model used create significance bracket comparing pre- post-hormone groups. large_axis_text character (\"yes\" \"\"). \"yes\", ggplot theme layer applied increases axis text. treatment_colour_theme dataframe containing treatment names associated colours hex values. See sample_treatment_names_and_colours example dataframe look like. theme_options dataframe containing theme options. See sample_theme_options example dataframe look like. save_plot_png character (\"yes\" \"\"). \"yes\", plot saved .png using ggsave. filepath depends current type, go subfolders Figures/ project directory. ggplot_theme name ggplot theme custom theme. added layer ggplot object. default patchclampplotteR_theme(), valid entries include theme_bw(), theme_classic() name custom ggplot theme stored object.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"ggplot object. save_plot_png == \"yes\", also generate .png file exported Figures/Evoked-currents/Variance-plots. plot named form \"Variance-comparison-category-plot_category-plot_treatment-variance_measure.png\". example filename \"Variance-comparison-category-2-Control-cv.png\".","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"specify test_type, function perform paired t-test paired wilcox test add brackets significance stars ggsignif::geom_signif(). allows visually determine change synaptic plasticity due pre- post-synaptic mechanism. information, please see Huijstee & Kessels (2020).","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/plot_variance_comparison_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot variance comparison for a treatment — plot_variance_comparison_data","text":"","code":"plot_variance_comparison_data(   data = sample_eEPSC_variance_df,   plot_category = 2,   plot_treatment = \"Control\",   variance_measure = \"cv\",   baseline_interval = \"t0to5\",   post_hormone_interval = \"t20to25\",   post_hormone_label = \"Insulin\",   test_type = \"wilcox.test\",   large_axis_text = \"no\",   treatment_colour_theme = sample_treatment_names_and_colours,   theme_options = sample_theme_options )"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>% rlang .data","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_AP_count_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of action potential count data for two time-points: during the control period (state == ","title":"Example of action potential count data for two time-points: during the control period (state == ","text":"Example action potential count data two time-points: control period (state == \"Baseline\") insulin applied (state == \"Insulin\"). obtained counting number action potentials present within sweep. data merged sample_cell_characteristics data add_new_cells() data_type = \"AP_count\".","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_AP_count_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of action potential count data for two time-points: during the control period (state == ","text":".rda file containing 340 objects 16 variables. letter, synapses, ID, sex, animal, treatment, etc. columns produced add_new_cells(). Please see sample_cell_characteristics detailed column descriptions. state character (\"Baseline\" \"Insulin\") representing timepoint data point belongs . sweep sweep. no_of_APs number action potentials present sweep. AP_frequency}{frequency action potentials (Hz) sweep. column generated add_new_cells().} \\item{current_injection` value current injection (pA)  particular sweep.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_PPR_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Evoked current data filtered to focus on paired-pulse ratio (PPR) analysis — sample_PPR_df","title":"Evoked current data filtered to focus on paired-pulse ratio (PPR) analysis — sample_PPR_df","text":"example raw eEPSC data produced using make_normalized_EPSC_data() filtered using make_PPR_data(). data modified, filtered include data within two time intervals (specified baseline_interval post_hormone_interval arguments). paired-pulse ratio (PPR) values also filtered include values fall within PPR_min PPR_max, two arguments make_PPR_data() function.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_PPR_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evoked current data filtered to focus on paired-pulse ratio (PPR) analysis — sample_PPR_df","text":".rda file containing 2206 objects 21 variables. letter, synapses, sex, etc. columns produced make_normalized_EPSC_data(). Please see sample_raw_eEPSC_df detailed column descriptions. state character (\"baseline\" \"post-modification\") representing timepoint data point belongs .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_PPR_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evoked current data filtered to focus on paired-pulse ratio (PPR) analysis — sample_PPR_df","text":"data can used PPR comparison plots, analyses determine mechanism synaptic plasticity.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_abf_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Evoked current recording excerpt — sample_abf_file","title":"Evoked current recording excerpt — sample_abf_file","text":"excerpt raw recording evoked currents exported Clampfit .abf file. can read using import_ABF_file() function, convert regular dataframe manipulation plotting R. used demonstrate plot_spontaneous_current_trace() function.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_abf_file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evoked current recording excerpt — sample_abf_file","text":"Axon Binary Format (.abf) file 10000 observations 5 variables. episode factor representing sweep, \"epi1\". time_sec Time seconds. time Time ms*100. voltage Numeric value representing voltage mV. current Numeric value representing current amplitude pA.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_abf_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evoked current recording excerpt — sample_abf_file","text":"","code":"import_ABF_file(import_ext_data(\"sample_abf.abf\"))"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_ap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of a complete action potential dataset used for plotting and analyses. This data contains parameters like peak_amplitude, after-hyperpolarization amplitude, and half-width for two time-points: during the control period (state == ","title":"Example of a complete action potential dataset used for plotting and analyses. This data contains parameters like peak_amplitude, after-hyperpolarization amplitude, and half-width for two time-points: during the control period (state == ","text":"example data looks like imported add_new_cells() data_type = \"AP\". can see columns cell characteristics file appended new rows peak_amplitude, -hyperpolarization amplitude, latency fire, others.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_ap_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of a complete action potential dataset used for plotting and analyses. This data contains parameters like peak_amplitude, after-hyperpolarization amplitude, and half-width for two time-points: during the control period (state == ","text":".rda file containing 34 objects 25 variables. letter, synapses, ID, sex, animal, treatment, etc. columns produced add_new_cells(). Please see sample_cell_characteristics detailed column descriptions. state character (\"Baseline\" \"Insulin\") representing timepoint data point belongs . time_of_threshold time (ms) membrane potential reaches threshold value. threshold threshold (mV). Determined using first derivative method, threshold membrane potential results derivative 10 mV/ms greater (Farries et al., 2010). t_11 value first derivative (action potential velocity mV/ms) threshold. first_sweep_with_APs sweep number first sweep (going lowest higher current injection values) resulted action potential. trace_start automated value Clampfit used analysis. peak_amplitude peak amplitude (pA) action potential relative threshold. time_to_peak time peak amplitude (ms) relative time threshold. antipeak_amplitude -hyperpolarization amplitude (pA) relative threshold. time_of_antipeak time -hyperpolarization (ms). half_width half-width, width action potential half peak amplitude. latency_to_fire latency fire, calculated subtracting injection start time time_to_peak. antipeak_time_relative_to_threshold time afterhyperpolarization amplitude (ms) relative time threshold.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_cell_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Information about sex, age, treatment, and animal ID — sample_cell_characteristics","title":"Information about sex, age, treatment, and animal ID — sample_cell_characteristics","text":"dataset provides example type cell characteristics recording data. dataset contains columns animal number, age, sex, synapses recorded , treatments applied. also column access, stored list. important column letter. unique identifier assign recording. letter column enable link information relevant recording (evoked current data, spontaneous current data, animal data like age, sex, etc.) different files. import .csv file using import_cell_characteristics_df() function, format format makes easy merge raw recording data functions like make_normalized_EPSC_data(). enable analyze relationships properties like age current amplitude.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_cell_characteristics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Information about sex, age, treatment, and animal ID — sample_cell_characteristics","text":"dataframe 19 rows 11 columns letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. Example: \"\" cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. sex character value \"Male\" \"Female\". X numeric value representing x-value cell's location µm. Y numeric value representing y-value cell's location µm. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). use characters (e.g. avoid \"P31\" use 31 instead). animal numeric value representing animal's ID number. synapses character value \"Glutamate\" \"GABA\". treatment character value \"Control\" \"HNMPA\". category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. R_a list values access resistance, monitored several timepoints throughout recording. See section R_a formatting .","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_cell_characteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information about sex, age, treatment, and animal ID — sample_cell_characteristics","text":"","code":"utils::read.csv(import_ext_data(\"sample_cell_characteristics.csv\")) #>    letter    cell    sex      X      Y age animal  synapses     treatment #> 1      BN  25.1.2   Male 152.92 337.19  29   25.0 Glutamate       Control #> 2      AZ  21.1.1 Female 352.62 331.74  32   21.0 Glutamate       Control #> 3      AO  17.1.1   Male     NA     NA  39   17.0 Glutamate       Control #> 4      BO  27.2.1   Male     NA     NA  32   27.0 Glutamate         HNMPA #> 5      BT  30.2.1   Male 387.19 586.98  37   30.0 Glutamate         HNMPA #> 6      CG  35.1.3 Female 164.18 366.52  36   35.0 Glutamate         HNMPA #> 7       L 8.5.2.1   Male     NA     NA  38    8.5 Glutamate       Control #> 8      CZ  41.2.2   Male 296.51 492.90  28   41.0 Glutamate         HNMPA #> 9      FT  72.2.1 Female 153.33 337.18  39   72.0 Glutamate         HNMPA #> 10     FX  74.1.2 Female 234.69 495.50  28   74.0 Glutamate           PPP #> 11     GF  77.3.1 Female 217.23 323.55  36   77.0 Glutamate           PPP #> 12     GI  81.1.1 Female 235.96 284.23  28   81.0 Glutamate           PPP #> 13     GK  84.1.1   Male 248.74 574.44  35   84.0 Glutamate           PPP #> 14     GR  90.3.1   Male 313.50 415.97  34   90.0 Glutamate           PPP #> 15     GX  97.2.3   Male     NA     NA  33   97.0 Glutamate PPP_and_HNMPA #> 16     HB 100.1.1   Male 133.20 590.25  39  100.0 Glutamate PPP_and_HNMPA #> 17     HC 100.2.2   Male 172.54 576.26  39  100.0 Glutamate PPP_and_HNMPA #> 18     HG 103.2.1 Female     NA     NA  34  103.0 Glutamate PPP_and_HNMPA #> 19     HN 109.1.1   Male 288.97 400.18  38  109.0 Glutamate PPP_and_HNMPA #> 20     AV  20.3.1 Female  55.10 248.80  31   20.0 Glutamate       Control #>    category                                              R_a #> 1         2                     1.6, 1.7, 1.7, 1.8, 1.8, 2.0 #> 2         2           2.5, 2.6, 2.6, 2.9, 2.6, 2.6, 2.6, 2.7 #> 3         2                     1.9, 1.9, 1.8, 1.9, 2.0, 3.0 #> 4         2                     1.7, 1.7, 1.7, 1.8, 1.7, 1.8 #> 5         2 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.8, 1.5, 1.5, 1.5 #> 6         2                     2.0, 2.1, 2.1, 2.2, 2.2, 2.2 #> 7         2                     1.4, 1.5, 1.5, 1.6, 1.6, 1.5 #> 8         2                     2.0, 2.0, 2.1, 2.2, 2.1, 2.1 #> 9         2                     1.5, 1.5, 1.6, 1.7, 1.9, 2.0 #> 10        2                     1.9, 1.8, 1.9, 2.1, 2.0, 2.3 #> 11        2                     1.6, 1.6, 1.7, 1.7, 1.8, 1.7 #> 12        2                     1.3, 1.3, 1.3, 1.3, 1.4, 1.4 #> 13        2                          2.2, 2.2, 2.2, 2.3, 2.5 #> 14        2                     1.3, 1.4, 1.5, 1.5, 1.6, 1.8 #> 15        2                     1.6, 1.6, 1.7, 1.7, 1.8, 1.7 #> 16        2                     2.2, 2.5, 2.5, 2.6, 2.6, 2.6 #> 17        2                1.4, 1.5, 1.6, 1.9, 1.8, 2.3, 2.0 #> 18        2                                                  #> 19        2                     1.7, 1.7, 1.7, 1.7, 1.7, 1.7 #> 20        2                     1.6, 1.8, 1.8, 2.0, 2.0, 2.0"},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_eEPSC_t_test_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired t-test results comparing evoked current amplitudes relative to baseline — sample_eEPSC_t_test_df","title":"Paired t-test results comparing evoked current amplitudes relative to baseline — sample_eEPSC_t_test_df","text":"example dataframe t-test results produced using perform_t_tests_for_summary_plot(). dataframe can used statistical analyses, also specialized columns add significance stars plot produced plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_eEPSC_t_test_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paired t-test results comparing evoked current amplitudes relative to baseline — sample_eEPSC_t_test_df","text":".rda file containing 16 objects 10 variables treatment character value specifying treatment applied (e.g. \"Control\", \"HNMPA\") antagonists agonists, protocol applied animals (e.g. \"Fasting\"). .y. character value describing parameter compared t-test. case, uses mean normalized amplitude first evoked current (\"mean_P1_transformed\") generated using make_summary_EPSC_data(). group1 character value describing first group used paired t-test. baseline interval, \"t0to5\". group2 character value describing second group used paired t-test. Examples include \"t5to10\" \"t10to15\". n1 number paired values used comparison. statistic test statistic. df degrees freedom. p_string p-value expressed character value using lazyWeave::pvalString(), rounds values expresses according typical published values (e.g. > 0.99, < 0.001 instead exact values). significance_stars character value containing asterisks indicating significance. p < 0.05 = *, p < 0.01 = **, p < 0.001 = ***. asterisk_time numeric value indicating time value significance star added. midpoint interval. example, asterisk_time interval 5 10 minutes 7.5 minutes.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_eEPSC_variance_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-to-mean ratio and coefficient of variation of evoked current amplitudes — sample_eEPSC_variance_df","title":"Variance-to-mean ratio and coefficient of variation of evoked current amplitudes — sample_eEPSC_variance_df","text":"example dataframe generated evoked current summary data processed using function make_variance_data(). contains new columns mean variance--mean ratio (VMR) mean inverse coefficient variation squared two time intervals. baseline period (\"t0to5\"), time interval hormone protocol applied (case, \"t20to25\"). can used analyses also make variance comparison plots.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_eEPSC_variance_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variance-to-mean ratio and coefficient of variation of evoked current amplitudes — sample_eEPSC_variance_df","text":".rda file containing 38 objects 23 variables. state character value describing data point belongs baseline interval (\"Baseline\") interval hormone protocol applied (\"Post-modification\"). intervals selected baseline_interval post_hormone_interval. mean_cv_inverse_square mean inverse coefficient variation squared within specific state. mean_VMR mean variance--mean ratio within specific state. category, letter, sex, treatment, etc. columns imported directly summary data without modifications. detailed description columns, please see sample_summary_eEPSC_df.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_eEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Evoked current data pruned to a summary point per minute — sample_pruned_eEPSC_df","title":"Evoked current data pruned to a summary point per minute — sample_pruned_eEPSC_df","text":"example dataframe excitatory current amplitudes produced using make_pruned_EPSC_data(). dataset list three dataframes containing pruned data. can used statistical analyses plotting. plot_raw_current_data() plot_summary_current_data() particular depend heavily type dataset.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_eEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evoked current data pruned to a summary point per minute — sample_pruned_eEPSC_df","text":"list 3 dataframes: individual_cells, for_table all_cells.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_eEPSC_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evoked current data pruned to a summary point per minute — sample_pruned_eEPSC_df","text":"individual_cells used make pruned plots individual recordings using plot_raw_current_data(). for_table used make experiment overview table all_cells used plot_summary_current_data()","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_sEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Spontaneous current data pruned to a summary point per minute — sample_pruned_sEPSC_df","title":"Spontaneous current data pruned to a summary point per minute — sample_pruned_sEPSC_df","text":"example dataframe spontaneous currents produced using make_pruned_EPSC_data(). dataset list three dataframes containing pruned data. can used statistical analyses plotting. plot_raw_current_data() plot_summary_current_data() particular depend heavily type dataset.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_sEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spontaneous current data pruned to a summary point per minute — sample_pruned_sEPSC_df","text":"list 3 dataframes: individual_cells, for_table all_cells.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_pruned_sEPSC_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spontaneous current data pruned to a summary point per minute — sample_pruned_sEPSC_df","text":"individual_cells used make pruned plots individual recordings using plot_raw_current_data(). for_table used make experiment overview table. all_cells used plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_raw_eEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Representative data from a series of evoked (eEPSC) currents — sample_raw_eEPSC_df","title":"Representative data from a series of evoked (eEPSC) currents — sample_raw_eEPSC_df","text":"example raw eEPSC data produced using make_normalized_EPSC_data(). useful demonstrating functions build dataset, make_pruned_EPSC_data() plotting functions like plot_raw_current_data() plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_raw_eEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Representative data from a series of evoked (eEPSC) currents — sample_raw_eEPSC_df","text":".rda file containing 5680 objects 20 variables. letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. synapses character value (e.g. \"Glutamate\" \"GABA\"). sex character value (e.g. \"Male\" \"Female\"). treatment character value (e.g. \"Control\", \"HNMPA\") representing antagonists agonists applied, protocol applied animals (e.g. \"Fasting\"). time numeric value represents time minutes. column autogenerated add_new_cells(). ID character value recording filename. P1 numeric value representing amplitude first evoked current pA. P2 numeric value representing amplitude second evoked current pA. X numeric value representing x-value cell's location µm. Leave blank data. Y numeric value representing y-value cell's location µm. Leave blank data. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). animal numeric value representing animal's ID number. category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. PPR (evoked currents ) numeric value represents paired pulse ratio (PPR) evoked currents, generated using dplyr::mutate(PPR = P2/P1). interval character value indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. Time <= 5) FALSE times. baseline_mean numeric value representing mean evoked current amplitude baseline period. different baseline_mean letter. P1_transformed numeric value representing first evoked current amplitude (pA) normalized relative mean amplitude recording's baseline. P2_transformed numeric value representing second evoked current amplitude (pA) normalized relative mean amplitude recording's baseline.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_raw_sEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Representative data from a series of spontaneous (sEPSC) currents — sample_raw_sEPSC_df","title":"Representative data from a series of spontaneous (sEPSC) currents — sample_raw_sEPSC_df","text":"example raw spontaneous current data produced using make_normalized_EPSC_data(). useful demonstrating functions build dataset, make_pruned_EPSC_data() plotting functions like plot_raw_current_data() plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_raw_sEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Representative data from a series of spontaneous (sEPSC) currents — sample_raw_sEPSC_df","text":".rda file containing 5680 objects 20 variables. letter character value unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. ID character value recording filename. recording_num numeric value representing recording number. incorporated switched concatenating recordings one, needs remain prevent breaking previous projects. set 1. trace numeric value representing trace (automatically generated Clampfit) current occurred. time_of_peak numeric value representing time peak milliseconds relative trace number. automatically calculated Clampfit. amplitude numeric value representing amplitude evoked current pA. cell character numeric value representing cell. example, use 3.1.1 animal #3, slice #1, cell #1. sex character value (e.g. \"Male\" \"Female\"). X numeric value representing x-value cell's location µm. Leave blank data. Y numeric value representing y-value cell's location µm. Leave blank data. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). animal numeric value representing animal's ID number. synapses character value (e.g. \"Glutamate\" \"GABA\"). treatment character value (e.g. \"Control\", \"HNMPA\") representing antagonists agonists applied, protocol applied animals (e.g. \"Fasting\"). category numeric value representing experiment type. Used assign top-level groups analyses, treatment subgroups. time numeric value representing absolute time current happened, relative start recording. autogenerated. See [add_new_cells() description true time value (time) calculated recording_num trace. interval character value indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. baseline_range logical value required baseline transformation. set TRUE time within baseline period (e.g. Time <= 5) FALSE times. baseline_mean numeric value representing mean evoked current amplitude baseline period. different baseline_mean letter. amplitude_transformed numeric value representing spontaneous current amplitude (pA) normalized relative mean spontaneous current amplitude recording's baseline.","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_sEPSC_t_test_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired t-test results comparing spontaneous current amplitudes relative to baseline amplitudes — sample_sEPSC_t_test_df","title":"Paired t-test results comparing spontaneous current amplitudes relative to baseline amplitudes — sample_sEPSC_t_test_df","text":"example dataframe t-test results produced using perform_t_tests_for_summary_plot() current_type == \"sEPSC\". dataframe can used statistical analyses, also specialized columns add significance stars plot produced plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_sEPSC_t_test_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paired t-test results comparing spontaneous current amplitudes relative to baseline amplitudes — sample_sEPSC_t_test_df","text":".rda file containing 16 objects 10 variables treatment character value specifying treatment applied (e.g. \"Control\", \"HNMPA\") antagonists agonists, protocol applied animals (e.g. \"Fasting\"). .y. character value describing parameter compared t-test. case, uses mean normalized amplitude spontaneous current (\"mean_transformed amplitude\") generated using make_summary_EPSC_data(). group1 character value describing first group used paired t-test. baseline interval, \"t0to5\". group2 character value describing second group used paired t-test. Examples include \"t5to10\" \"t10to15\". n1 number paired values used comparison. statistic test statistic. df degrees freedom. p_string p-value expressed character value using lazyWeave::pvalString(), rounds values expresses according typical published values (e.g. > 0.99, < 0.001 instead exact values). significance_stars character value containing asterisks indicating significance. p < 0.05 = *, p < 0.01 = **, p < 0.001 = ***. asterisk_time numeric value indicating time value significance star added. midpoint interval. example, asterisk_time interval 5 10 minutes 7.5 minutes.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_summary_eEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Evoked current data summarized into 5-minute intervals — sample_summary_eEPSC_df","title":"Evoked current data summarized into 5-minute intervals — sample_summary_eEPSC_df","text":"example summary eEPSC data produced using make_summary_EPSC_data(). useful demonstrating functions build dataset, plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_summary_eEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evoked current data summarized into 5-minute intervals — sample_summary_eEPSC_df","text":".rda file containing 95 objects 20 variables. category factor representing experiment type. Used assign top-level groups analyses, treatment subgroups. letter factor unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. sex factor two levels (e.g. \"Male\" \"Female\"). treatment factor based treatment applied (e.g. \"Control\", \"HNMPA\"). represents antagonists agonists applied, protocol applied animals (e.g. \"Fasting\"). interval factor indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. mean_P1_transformed numeric value representing mean current amplitude (pA normalized baseline amplitude) first evoked current. values used produce mean_P1_transformed come data points within interval (length interval specified make_normalized_EPSC_data()). mean_P1_raw values mean_P1_transformed except values contain raw values current amplitude (e.g. data baseline transformed). n number data points used produce value mean_P1_transformed mean_P1_raw sd standard deviation mean current values. cv coefficient variation mean current values. se standard error mean current values. cv_inverse_square inverse coefficient variation squared mean current values. Calculated using (1/cv^2), cv coefficient variation. Useful variance analysis. variance variance current values, calculated using stats::var(). VMR variance--mean ratio, calculated using variance/mean_P1_transformed. Useful variance analysis. age numeric value representing animal's age. Can value long time units consistent throughout (e.g. mix days months reporting animal ages). animal numeric value representing animal's ID number. X numeric value representing x-value cell's location µm. Leave blank data. Y numeric value representing y-value cell's location µm. Leave blank data. time numeric value represents time minutes. column autogenerated add_new_cells(). synapses character value (e.g. \"Glutamate\" \"GABA\").","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_summary_sEPSC_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Spontaneous current data summarized into 5-minute intervals — sample_summary_sEPSC_df","title":"Spontaneous current data summarized into 5-minute intervals — sample_summary_sEPSC_df","text":"example summary eEPSC data produced using make_summary_EPSC_data(). useful demonstrating functions build dataset, plot_summary_current_data().","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_summary_sEPSC_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spontaneous current data summarized into 5-minute intervals — sample_summary_sEPSC_df","text":".rda file containing 70 objects 16 variables. category factor representing experiment type. Used assign top-level groups analyses, treatment subgroups. letter factor unique identifier single recording. Used link data sets evoked spontaneous currents cell-characteristics. sex factor two levels (e.g. \"Male\" \"Female\"). treatment factor based treatment applied (e.g. \"Control\", \"HNMPA\"). represents antagonists agonists applied, protocol applied animals (e.g. \"Fasting\"). interval factor indicating interval data point belongs . example, interval \"t0to5\" data points 0 5 minutes. Example values: \"t0to5\", \"t5to10\", etc. mean_transformed_amplitude average normalized spontaneous current amplitude (% Baseline sEPSC amplitude). mean_raw_amplitude average raw spontaneous current amplitude (pA). n number datapoints used create average. sd_transformed_amplitude standard deviation normalized spontaneous current data (mean_transformed_amplitude). se_transformed_amplitude standard error mean_transformed_amplitude. mean_transformed_frequency average normalized frequency (% Baseline frequency). sd_transformed_frequency standard deviation mean_transformed_frequency. se_frequency standard error mean_transformed_frequency. mean_raw_frequency average raw frequency (Hz). time numeric value represents time minutes. column autogenerated add_new_cells(). synapses character value (e.g. \"Glutamate\" \"GABA\").","code":""},{"path":[]},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_theme_options.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataframe of theme options for things like colours and line widths — sample_theme_options","title":"A dataframe of theme options for things like colours and line widths — sample_theme_options","text":"example dataframe used specify colour themes plot options (like line thickness). want modify file, see section Defining theme options .","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_theme_options.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataframe of theme options for things like colours and line widths — sample_theme_options","text":".rda file containing 23 objects 2 variables gray_shading_colour Hex code colour used fill violin plots. line_col Hex code colour used line indicating periods hormone applied. rectangle_shading_colour Hex code colour used shade rectangles. male_shape Numeric value representing point shape used data values Sex == Male. female_shape Numeric value representing point shape used data values Sex == Female. mean_point_colour Hex code colour used fill mean data point plots like PPR comparison plot. connecting_line_width width connecting line action potential comparison plots. connecting_line_colour colour connecting line action potential comparison plots. connecting_line_width_PPR width connecting line paired-pulse ratio comparison plots. mean_point_size size mean data point plots like PPR comparison plot. geom_signif_text_size size asterisk text plots like spontaneous current comparison plots. AP_trace_size USE; moved function argument future releases. y_axis_limit maximum y-axis value used plots.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_theme_options.html","id":"defining-your-own-theme-options","dir":"Reference","previous_headings":"","what":"Defining your own theme options","title":"A dataframe of theme options for things like colours and line widths — sample_theme_options","text":"Step 1: Create .csv file two columns (option value) modelled sample dataset. Important: .csv must identical columns rows sample data, else plots work! Step 2: Read .csv file using utils::read_csv(). now object R environment. Step 3: Important!! must convert first column (option) rownames. mandatory step allow theme_options indexed row name plotting functions. Step 4: Run following code: library(tibble) my_sample_theme_options <- read.csv(::(\"Data/your_sample_theme_options.csv\")) %>% remove_rownames %>% column_to_rownames(var=\"option\") Step 5: Check resulting object. now 11 objects 1 variable, row names gray_shading_colour, line_col, etc. Step 6: Go plotting function like plot_raw_current_data() replace sample_theme_options newly created object Step 5.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_treatment_names_and_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataframe of treatments and their assigned colours for consistency across plots — sample_treatment_names_and_colours","title":"A dataframe of treatments and their assigned colours for consistency across plots — sample_treatment_names_and_colours","text":"example dataframe used specify colour theme treatment. used create consistent colour scheme across plots produced package.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_treatment_names_and_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataframe of treatments and their assigned colours for consistency across plots — sample_treatment_names_and_colours","text":".rda file containing 4 objects 4 variables treatment character value specifying treatment applied (e.g. \"Control\", \"HNMPA\") antagonists agonists, protocol applied animals (e.g. \"Fasting\"). display_names character value treatment names treatment except replace underscores spaces add line breaks needed. create attractive, human-readable axis labels table values. colours character value hex colour values. very_pale_colours character value hex colour values. lighter colours colours used create contrast summary plots sexes.","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/reference/sample_treatment_names_and_colours.html","id":"defining-your-own-treatment-names-and-colours","dir":"Reference","previous_headings":"","what":"Defining your own treatment names and colours","title":"A dataframe of treatments and their assigned colours for consistency across plots — sample_treatment_names_and_colours","text":"Use data.frame() function define object, refer named object treatment_colour_theme arguments. E.g. my_theme_colours <- data.frame( treatment = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP_and_HNMPA\"), display_names = c(\"Control\", \"HNMPA\", \"PPP\", \"PPP\\n&\\nHNMPA\"), colours = c(\"#f07e05\", \"#f50599\", \"#70008c\", \"#DCE319\"), very_pale_colours = c(\"#fabb78\", \"#fa98d5\", \"#ce90de\", \"yellow\") )","code":""},{"path":"https://christelinda-laureijs.github.io/patchclampplotteR/news/index.html","id":"patchclampplotter-010","dir":"Changelog","previous_headings":"","what":"patchclampplotteR 0.1.0","title":"patchclampplotteR 0.1.0","text":"first public release patchclampplotteR, package designed help electrophysiologists plot analyze data patch clamp recordings. package can installed GitHub using: Please see patchclampplotteR package website detail use !","code":"pak::pak(\"christelinda-laureijs/patchclampplotteR\")"}]
