% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot-data.R
\name{plot_baseline_data}
\alias{plot_baseline_data}
\title{Make baseline comparison plot}
\usage{
plot_baseline_data(
  data,
  current_type = "eEPSC",
  plot_category,
  y_variable = "raw_amplitude",
  include_all_treatments = "yes",
  list_of_treatments = NULL,
  baseline_interval = "t0to5",
  filename_suffix = "",
  large_axis_text = "no",
  included_sexes = "both",
  male_label = "Male",
  female_label = "Female",
  plot_width = 8,
  treatment_colour_theme,
  theme_options,
  save_plot_png = "no",
  ggplot_theme = patchclampplotteR_theme()
)
}
\arguments{
\item{data}{A dataframe containing the summary data generated from
\code{\link[=make_summary_EPSC_data]{make_summary_EPSC_data()}}. If \code{current_type} is "eEPSC", this must be the \verb{$summary_data} element of the list produced by \code{\link[=make_summary_EPSC_data]{make_summary_EPSC_data()}}.}

\item{current_type}{A character describing the current type. Allowed values
are \code{"eEPSC"} or \code{"sEPSC"}.}

\item{plot_category}{A numeric value specifying the category, which can be
used to differentiate different protocol types. In the sample dataset for
this package, \code{plot_category == 2} represents experiments where insulin was
applied continuously after a 5-minute baseline period.}

\item{y_variable}{A character describing the parameter used on the y-axis. If
\code{current_type == "eEPSC"}, the allowed y_variable is \code{"raw_amplitude"}. If
\code{current_type == "sEPSC"}, the allowed y_variables are \code{"raw_amplitude"} or
\code{"raw_frequency"}. Note: It does not make sense to use normalized/baseline
transformed amplitudes, since these will all be 100, and the graph will be
a flat line.}

\item{include_all_treatments}{A character (\code{"yes"} or \code{"no"}) specifying if the
plot will include data from all treatments. If \code{"no"}, you must specify a
list of treatments in \code{list_of_treatments}.}

\item{list_of_treatments}{A list of character values describing the
treatments that will be in the plot. Defaults to \code{NULL}, since
include_all_treatments is \code{"yes"} by default.}

\item{baseline_interval}{A character value indicating the name of the
interval used as the baseline. Defaults to \code{"t0to5"}, but can be changed.
Make sure that this matches the baseline interval that you set in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.}

\item{filename_suffix}{Optional character value to add a suffix to the
filename of the .png file created with this plot. Could be useful if you
have specified a custom list of treatments.}

\item{large_axis_text}{A character (\code{"yes"} or \code{"no"}). If \code{"yes"}, a ggplot theme
layer will be applied which increases the axis text.}

\item{included_sexes}{A character value (\code{"both"}, \code{"male"} or \code{"female"}). Useful if you want to have a plot with data from one sex only. Defaults to \code{"both"}. If you choose a single sex, the resulting plot will have \code{"-males-only"} or \code{"-females-only"} in the file name. WARNING!! If you choose \code{"male"} or \code{"female"}, you MUST ensure that the \code{t_test_df} contains data that has been filtered to only include one sex. Otherwise, the significance stars will represent both sexes and it will be inaccurate.}

\item{male_label}{A character value used to describe how males are encoded in the \code{sex} column of the dataframe used in \code{data}. This MUST match the value for male data in the \code{sex} column, and it must be consistent across data sheets. Defaults to \code{"Male"}.}

\item{female_label}{A character value used to describe how females are encoded in the \code{sex} column of the dataframe used in \code{data}. This MUST match the value for female data in the \code{sex} column, and it must be consistent across data sheets. This must be consistent in all data sheets. Defaults to \code{"Female"}.}

\item{plot_width}{A numeric value specifying the width of the plot. Defaults
to 8, but you will need to adjust this depending on how many treatments you
have.}

\item{treatment_colour_theme}{A dataframe containing treatment names and
their associated colours as hex values. See
\link{sample_treatment_names_and_colours} for an example of what this dataframe
should look like.}

\item{theme_options}{A dataframe containing theme options, defaults to \code{sample_theme_options}. See
\link{sample_theme_options} for an example of what this dataframe should
look like and how you can customize these values.}

\item{save_plot_png}{A character (\code{"yes"} or \code{"no"}). If \code{"yes"}, the plot will be
saved as a .png using \code{ggsave()}. The filepath depends on the current type, but
they will all go in subfolders below \verb{Figures/} in your project directory.}

\item{ggplot_theme}{The name of a ggplot theme or your custom theme. This will be added as a layer to a ggplot object. The default is \code{patchclampplotteR_theme()}, but other valid entries include \code{theme_bw()}, \code{theme_classic()} or the name of a custom ggplot theme stored as an object.}
}
\value{
A ggplot object. If \code{save_plot_png == "yes"}, it will also generate
a .png file in \code{Figures/Evoked-currents/Output-summary-plots} or
\code{Figures/Spontaneous-currents/Output-summary-plots}. The .png filename will
contain the \code{y_variable}.
}
\description{
This function creates a scatterplot of \code{y_variables} such as raw amplitude
grouped according to treatment. The data are limited to values from the
baseline period, allowing for a quick comparison of baseline parameters
across treatments. For evoked currents, only raw amplitude is available for
comparison. For spontaneous currents, raw amplitude and raw frequency during
the baseline period can be plotted.
}
\examples{
plot_baseline_data(
  data = sample_summary_eEPSC_df$summary_data,
  current_type = "eEPSC",
  plot_category = 2,
  y_variable = "raw_amplitude",
  include_all_treatments = "yes",
  list_of_treatments = NULL,
  baseline_interval = "t0to5",
  included_sexes = "both",
  large_axis_text = "no",
  plot_width = 8,
  treatment_colour_theme = sample_treatment_names_and_colours,
  theme_options = sample_theme_options,
  save_plot_png = "no"
)
}
