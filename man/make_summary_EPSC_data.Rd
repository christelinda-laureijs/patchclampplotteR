% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Process-data.R
\name{make_summary_EPSC_data}
\alias{make_summary_EPSC_data}
\title{Summarize current data per 5-min for statistical tests}
\usage{
make_summary_EPSC_data(
  data = patchclampplotteR::sample_raw_eEPSC_df,
  current_type = "eEPSC",
  save_output_as_RDS = "no"
)
}
\arguments{
\item{data}{A \code{data.frame} object generated using
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}. It must contain the columns outlined in the
Required columns section below, which will already be generated for you
from the output of \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.}

\item{current_type}{A character describing the current type. Allowed values
are "eEPSC" or "sEPSC".}

\item{save_output_as_RDS}{A character ("yes" or "no") describing if the
resulting object should be saved as an RDS file in the raw data folder.}
}
\value{
A dataframe with summary data such as the mean current amplitude,
coefficient of variation, standard deviation, standard error, variance,
variance-to-mean ratio, and inverse coefficient of variation squared for
each interval. See \link{sample_summary_eEPSC_df} for detailed information on
the columns and what they mean.
}
\description{
\code{make_summary_EPSC_data()} allows you to divide data from a long recording
(e.g. 30 minutes) into evenly-spaced intervals (e.g. 5 minutes). It will
generate summary data like the mean current amplitude for each interval. This
can be useful for inserting into statistical models to compare effect sizes
across broad stretches of time. The interval length would have been
previously specified in \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}} using the
\code{interval_length} argument.
}
\section{Required basic columns}{

It doesn't matter if the data are evoked or current type - these columns
should be included in your data.
\itemize{
\item \code{letter} A character value that is a unique identifier for a single
recording. Used to link data sets for evoked or spontaneous currents and
cell-characteristics.
\item \code{synapses} A character value (e.g. "Glutamate" or "GABA").
\item \code{sex} A character value (e.g. "Male" or "Female").
\item \code{treatment} A character value (e.g. "Control", "HNMPA").
\item \code{time} A numeric value that represents time in minutes. This column is
autogenerated in add_new_cells().
\item \code{ID} A character value for the recording filename.
\item \code{X} A numeric value representing the x-value of the cell's location in
µm. Leave this blank if you don't have this data.
\item \code{Y} A numeric value representing the y-value of the cell's location in
µm. Leave this blank if you don't have this data.
\item \code{age} A numeric value representing the animal's age. Can be any value
as long as the time units are consistent throughout (e.g. don't mix up days
and months when reporting animal ages).
\item \code{animal} A numeric value representing the animal's ID or number.
\item \code{category} A numeric value representing the experiment type. Used to
assign top-level groups for further analyses, with \code{treatment} as subgroups.
\item \code{cell} A character or numeric value representing the cell. For
example, use \verb{3.1.1} for animal #3, slice #1, cell #1.
}

\strong{Evoked current data}:

If the data are evoked currents (\code{current_type == "eEPSC"}), the data must
contain the basic columns mentioned in \strong{Required basic columns} plus these
columns:

\itemize{
\item \code{P1} A numeric value representing the
amplitude of the first evoked current in pA.
\item \code{P2} A numeric value representing the
amplitude of the second evoked current in pA.
}

\strong{Spontaneous current data:}

If the data are spontaneous currents (\code{current_type == "sEPSC"}), the data
must contain the basic columns mentioned in \strong{Required basic columns} plus
these columns:
\itemize{
\item \code{recording_num} A numeric value representing the recording number.
This was incorporated before we switched to concatenating all recordings
into one, but it needs to remain here to prevent breaking previous projects.
It should be set to 1.
\item \code{trace} A numeric value representing the trace (automatically
generated in Clampfit) where the current occured.
\item \code{time_of_peak} A numeric value representing the time of the peak in
milliseconds relative to trace number. This is automatically calculated in
Clampfit.
\item \code{time} A numeric value representing the absolute time when the current
happened, relative to the start of the recording. This is autogenerated. See
add_new_cells() for a description of how the true time value (\code{time}) is
calculated from the \code{recording_num} and \code{trace.}
\item \code{amplitude} A numeric value representing the amplitude of the evoked
current in pA.
}
}

\section{Required evoked currents columns}{


These columns will all be generated automatically in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}, but for more details, you can look at
\link{sample_raw_eEPSC_df} to see an example of what the incoming raw dataset in
the \code{data} argument should look like. If the data are evoked currents
(\code{current_type == "eEPSC"}), the data must contain the basic columns
mentioned in \strong{Required basic columns} plus these columns:

\itemize{
\item \code{PPR} A numeric value that represents the paired pulse ratio (PPR) of
the evoked currents, generated in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}
\item \code{interval} A character value indicating the interval that the data
belong to (e.g. "t0to5" for the first 5 minutes, "t5to10"). Generated
automatically in \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{baseline_range} A logical value required for the baseline
transformation. It is set to TRUE when time is within the baseline period
(e.g. \code{time <= 5}) and FALSE at all other times. Generated automatically in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{baseline_mean} A numeric value representing the mean evoked current
amplitude during the baseline period. There is a different baseline_mean for
each letter. Generated automatically in \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{P1_transformed} A numeric value representing the first evoked current
amplitude (pA) normalized relative to the mean amplitude during the
recording's baseline. Generated automatically in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{P2_transformed} A numeric value representing the second evoked
current amplitude (pA) normalized relative to the mean amplitude during the
recording's baseline. Generated automatically in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
}
}

\section{Required spontaneous currents columns}{

If the data are spontaneous currents (current_type == "sEPSC"), the data must
contain the basic columns mentioned in \strong{Required basic columns} plus these
columns:

\itemize{
\item \code{interval} A character value indicating the interval that the data
belong to (e.g. "t0to5" for the first 5 minutes, "t5to10"). Generated
automatically in \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{baseline_range} A logical value required for the baseline
transformation. It is set to TRUE when time is within the baseline period
(e.g. Time <= 5) and FALSE at all other times.
\item \code{baseline_mean} A numeric value representing the mean evoked current
amplitude during the baseline period. There is a different baseline_mean for
each letter. Generated automatically in \code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
\item \code{amplitude_transformed} A numeric value representing the spontaneous
current amplitude (pA) normalized relative to the mean amplitude during the
recording's baseline. Generated automatically in
\code{\link[=make_normalized_EPSC_data]{make_normalized_EPSC_data()}}.
}
}

\examples{

make_summary_EPSC_data(
  data = sample_raw_eEPSC_df,
  current_type = "eEPSC")

}
